;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 03/12/2020 14:09:28
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2F2E      	GOTO       1838
_Interrpcion:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x1683      	BSF        STATUS, 5
0x0008	0x00D4      	MOVWF      ___saveSTATUS
0x0009	0x080A      	MOVF       PCLATH, 0
0x000A	0x00D2      	MOVWF      ___savePCLATH
0x000B	0x018A      	CLRF       PCLATH
0x000C	0x0870      	MOVF       R0, 0
0x000D	0x1283      	BCF        STATUS, 5
0x000E	0x00A2      	MOVWF      34
0x000F	0x0871      	MOVF       R1, 0
0x0010	0x00A1      	MOVWF      33
0x0011	0x0872      	MOVF       R2, 0
0x0012	0x00A0      	MOVWF      32
;MLK_RGB_Controller.c,61 :: 		void Interrpcion() iv 0x0004 ics ICS_AUTO
;MLK_RGB_Controller.c,63 :: 		if(T0IF_bit)             // Verificar se houve estouro do Timer0
0x0013	0x1D0B      	BTFSS      T0IF_bit, BitPos(T0IF_bit+0)
0x0014	0x281E      	GOTO       L_Interrpcion0
;MLK_RGB_Controller.c,65 :: 		contadoraux2++;
0x0015	0x0AAE      	INCF       _contadoraux2, 1
;MLK_RGB_Controller.c,66 :: 		counter++;           // Incremente a variável counter
0x0016	0x1683      	BSF        STATUS, 5
0x0017	0x0AA3      	INCF       _counter, 1
0x0018	0x1903      	BTFSC      STATUS, 2
0x0019	0x0AA4      	INCF       _counter+1, 1
;MLK_RGB_Controller.c,67 :: 		TMR0 = 0x06;         // Atribui valor inicial ao TMR0
0x001A	0x3006      	MOVLW      6
0x001B	0x1283      	BCF        STATUS, 5
0x001C	0x0081      	MOVWF      TMR0
;MLK_RGB_Controller.c,68 :: 		T0IF_bit = 0x00;     // Zera a flag T0IF
0x001D	0x110B      	BCF        T0IF_bit, BitPos(T0IF_bit+0)
;MLK_RGB_Controller.c,73 :: 		}
L_Interrpcion0:
;MLK_RGB_Controller.c,76 :: 		if (TMR1IF_bit==1)
0x001E	0x1C0C      	BTFSS      TMR1IF_bit, BitPos(TMR1IF_bit+0)
0x001F	0x28BC      	GOTO       L_Interrpcion1
;MLK_RGB_Controller.c,79 :: 		TMR1L=Lo(pwm_ini);
0x0020	0x30FF      	MOVLW      255
0x0021	0x1683      	BSF        STATUS, 5
0x0022	0x054F      	ANDWF      _pwm_ini, 0
0x0023	0x1283      	BCF        STATUS, 5
0x0024	0x008E      	MOVWF      TMR1L
;MLK_RGB_Controller.c,80 :: 		TMR1H=Hi(pwm_ini);
0x0025	0x1683      	BSF        STATUS, 5
0x0026	0x0850      	MOVF       _pwm_ini+1, 0
0x0027	0x00F0      	MOVWF      R0
0x0028	0x01F1      	CLRF       R0+1
0x0029	0x30FF      	MOVLW      255
0x002A	0x0570      	ANDWF      R0, 0
0x002B	0x1283      	BCF        STATUS, 5
0x002C	0x008F      	MOVWF      TMR1H
;MLK_RGB_Controller.c,81 :: 		TMR1ON_bit=0;  //Para o timer1 para garantir o PWM
0x002D	0x1010      	BCF        TMR1ON_bit, BitPos(TMR1ON_bit+0)
;MLK_RGB_Controller.c,82 :: 		pwm1_cont++;
0x002E	0x0AE6      	INCF       _pwm1_cont, 1
;MLK_RGB_Controller.c,83 :: 		pwm2_cont++;
0x002F	0x1683      	BSF        STATUS, 5
0x0030	0x0AA1      	INCF       _pwm2_cont, 1
;MLK_RGB_Controller.c,84 :: 		pwm3_cont++;
0x0031	0x0AA2      	INCF       _pwm3_cont, 1
;MLK_RGB_Controller.c,86 :: 		switch (pwm1_caso)
0x0032	0x285A      	GOTO       L_Interrpcion2
;MLK_RGB_Controller.c,88 :: 		case ciclo1_p:
L_Interrpcion4:
;MLK_RGB_Controller.c,89 :: 		if (pwm1_cont>=ciclo1)
0x0033	0x0851      	MOVF       _ciclo1, 0
0x0034	0x1283      	BCF        STATUS, 5
0x0035	0x0266      	SUBWF      _pwm1_cont, 0
0x0036	0x1C03      	BTFSS      STATUS, 0
0x0037	0x2847      	GOTO       L_Interrpcion5
;MLK_RGB_Controller.c,91 :: 		if (ciclo1!=100) pwm1=0;
0x0038	0x1683      	BSF        STATUS, 5
0x0039	0x0851      	MOVF       _ciclo1, 0
0x003A	0x3A64      	XORLW      100
0x003B	0x1903      	BTFSC      STATUS, 2
0x003C	0x283F      	GOTO       L_Interrpcion6
0x003D	0x1283      	BCF        STATUS, 5
0x003E	0x1006      	BCF        PORTB, 0
L_Interrpcion6:
0x003F	0x1283      	BCF        STATUS, 5
;MLK_RGB_Controller.c,92 :: 		pwm1_cont=0;
0x0040	0x01E6      	CLRF       _pwm1_cont
;MLK_RGB_Controller.c,93 :: 		ciclo1_=100-ciclo1;
0x0041	0x1683      	BSF        STATUS, 5
0x0042	0x0851      	MOVF       _ciclo1, 0
0x0043	0x3C64      	SUBLW      100
0x0044	0x00CE      	MOVWF      _ciclo1_
;MLK_RGB_Controller.c,94 :: 		pwm1_caso=ciclo1_n;
0x0045	0x3001      	MOVLW      1
0x0046	0x00A5      	MOVWF      _pwm1_caso
;MLK_RGB_Controller.c,95 :: 		}
L_Interrpcion5:
;MLK_RGB_Controller.c,96 :: 		break;
0x0047	0x2863      	GOTO       L_Interrpcion3
;MLK_RGB_Controller.c,97 :: 		case ciclo1_n:
L_Interrpcion7:
0x0048	0x1683      	BSF        STATUS, 5
;MLK_RGB_Controller.c,98 :: 		if (pwm1_cont>=ciclo1_)
0x0049	0x084E      	MOVF       _ciclo1_, 0
0x004A	0x1283      	BCF        STATUS, 5
0x004B	0x0266      	SUBWF      _pwm1_cont, 0
0x004C	0x1C03      	BTFSS      STATUS, 0
0x004D	0x2859      	GOTO       L_Interrpcion8
;MLK_RGB_Controller.c,100 :: 		if (ciclo1_!=100) pwm1=1;
0x004E	0x1683      	BSF        STATUS, 5
0x004F	0x084E      	MOVF       _ciclo1_, 0
0x0050	0x3A64      	XORLW      100
0x0051	0x1903      	BTFSC      STATUS, 2
0x0052	0x2855      	GOTO       L_Interrpcion9
0x0053	0x1283      	BCF        STATUS, 5
0x0054	0x1406      	BSF        PORTB, 0
L_Interrpcion9:
0x0055	0x1283      	BCF        STATUS, 5
;MLK_RGB_Controller.c,101 :: 		pwm1_cont=0;
0x0056	0x01E6      	CLRF       _pwm1_cont
;MLK_RGB_Controller.c,102 :: 		pwm1_caso=ciclo1_p;
0x0057	0x1683      	BSF        STATUS, 5
0x0058	0x01A5      	CLRF       _pwm1_caso
;MLK_RGB_Controller.c,103 :: 		}
L_Interrpcion8:
;MLK_RGB_Controller.c,104 :: 		break;
0x0059	0x2863      	GOTO       L_Interrpcion3
;MLK_RGB_Controller.c,106 :: 		} //switch
L_Interrpcion2:
0x005A	0x1683      	BSF        STATUS, 5
0x005B	0x0825      	MOVF       _pwm1_caso, 0
0x005C	0x3A00      	XORLW      0
0x005D	0x1903      	BTFSC      STATUS, 2
0x005E	0x2833      	GOTO       L_Interrpcion4
0x005F	0x0825      	MOVF       _pwm1_caso, 0
0x0060	0x3A01      	XORLW      1
0x0061	0x1903      	BTFSC      STATUS, 2
0x0062	0x2848      	GOTO       L_Interrpcion7
L_Interrpcion3:
;MLK_RGB_Controller.c,110 :: 		switch (pwm2_caso)
0x0063	0x2886      	GOTO       L_Interrpcion10
;MLK_RGB_Controller.c,112 :: 		case ciclo2_p:
L_Interrpcion12:
0x0064	0x1683      	BSF        STATUS, 5
;MLK_RGB_Controller.c,113 :: 		if (pwm2_cont>=ciclo2)
0x0065	0x084A      	MOVF       _ciclo2, 0
0x0066	0x0221      	SUBWF      _pwm2_cont, 0
0x0067	0x1C03      	BTFSS      STATUS, 0
0x0068	0x2876      	GOTO       L_Interrpcion13
;MLK_RGB_Controller.c,115 :: 		if (ciclo2!=100) pwm2=0;
0x0069	0x084A      	MOVF       _ciclo2, 0
0x006A	0x3A64      	XORLW      100
0x006B	0x1903      	BTFSC      STATUS, 2
0x006C	0x286F      	GOTO       L_Interrpcion14
0x006D	0x1283      	BCF        STATUS, 5
0x006E	0x1086      	BCF        PORTB, 1
L_Interrpcion14:
;MLK_RGB_Controller.c,116 :: 		pwm2_cont=0;
0x006F	0x1683      	BSF        STATUS, 5
0x0070	0x01A1      	CLRF       _pwm2_cont
;MLK_RGB_Controller.c,117 :: 		ciclo2_=100-ciclo2;
0x0071	0x084A      	MOVF       _ciclo2, 0
0x0072	0x3C64      	SUBLW      100
0x0073	0x00CD      	MOVWF      _ciclo2_
;MLK_RGB_Controller.c,118 :: 		pwm2_caso=ciclo2_n;
0x0074	0x3003      	MOVLW      3
0x0075	0x00A7      	MOVWF      _pwm2_caso
;MLK_RGB_Controller.c,119 :: 		}
L_Interrpcion13:
;MLK_RGB_Controller.c,120 :: 		break;
0x0076	0x288F      	GOTO       L_Interrpcion11
;MLK_RGB_Controller.c,122 :: 		case ciclo2_n:
L_Interrpcion15:
;MLK_RGB_Controller.c,123 :: 		if (pwm2_cont>=ciclo2_)
0x0077	0x084D      	MOVF       _ciclo2_, 0
0x0078	0x0221      	SUBWF      _pwm2_cont, 0
0x0079	0x1C03      	BTFSS      STATUS, 0
0x007A	0x2885      	GOTO       L_Interrpcion16
;MLK_RGB_Controller.c,125 :: 		if (ciclo2_!=100)  pwm2=1;
0x007B	0x084D      	MOVF       _ciclo2_, 0
0x007C	0x3A64      	XORLW      100
0x007D	0x1903      	BTFSC      STATUS, 2
0x007E	0x2881      	GOTO       L_Interrpcion17
0x007F	0x1283      	BCF        STATUS, 5
0x0080	0x1486      	BSF        PORTB, 1
L_Interrpcion17:
;MLK_RGB_Controller.c,126 :: 		pwm2_cont=0;
0x0081	0x1683      	BSF        STATUS, 5
0x0082	0x01A1      	CLRF       _pwm2_cont
;MLK_RGB_Controller.c,127 :: 		pwm2_caso=ciclo2_p;
0x0083	0x3002      	MOVLW      2
0x0084	0x00A7      	MOVWF      _pwm2_caso
;MLK_RGB_Controller.c,128 :: 		}
L_Interrpcion16:
;MLK_RGB_Controller.c,129 :: 		break;
0x0085	0x288F      	GOTO       L_Interrpcion11
;MLK_RGB_Controller.c,131 :: 		} //switch
L_Interrpcion10:
0x0086	0x1683      	BSF        STATUS, 5
0x0087	0x0827      	MOVF       _pwm2_caso, 0
0x0088	0x3A02      	XORLW      2
0x0089	0x1903      	BTFSC      STATUS, 2
0x008A	0x2864      	GOTO       L_Interrpcion12
0x008B	0x0827      	MOVF       _pwm2_caso, 0
0x008C	0x3A03      	XORLW      3
0x008D	0x1903      	BTFSC      STATUS, 2
0x008E	0x2877      	GOTO       L_Interrpcion15
L_Interrpcion11:
;MLK_RGB_Controller.c,134 :: 		switch (pwm3_caso)
0x008F	0x28B1      	GOTO       L_Interrpcion18
;MLK_RGB_Controller.c,136 :: 		case ciclo3_p:
L_Interrpcion20:
;MLK_RGB_Controller.c,137 :: 		if (pwm3_cont>=ciclo3)
0x0090	0x084B      	MOVF       _ciclo3, 0
0x0091	0x0222      	SUBWF      _pwm3_cont, 0
0x0092	0x1C03      	BTFSS      STATUS, 0
0x0093	0x28A1      	GOTO       L_Interrpcion21
;MLK_RGB_Controller.c,139 :: 		if (ciclo3!=100)  pwm3=0;
0x0094	0x084B      	MOVF       _ciclo3, 0
0x0095	0x3A64      	XORLW      100
0x0096	0x1903      	BTFSC      STATUS, 2
0x0097	0x289A      	GOTO       L_Interrpcion22
0x0098	0x1283      	BCF        STATUS, 5
0x0099	0x1106      	BCF        PORTB, 2
L_Interrpcion22:
;MLK_RGB_Controller.c,140 :: 		pwm3_cont=0;
0x009A	0x1683      	BSF        STATUS, 5
0x009B	0x01A2      	CLRF       _pwm3_cont
;MLK_RGB_Controller.c,141 :: 		ciclo3_=100-ciclo3;
0x009C	0x084B      	MOVF       _ciclo3, 0
0x009D	0x3C64      	SUBLW      100
0x009E	0x00CC      	MOVWF      _ciclo3_
;MLK_RGB_Controller.c,142 :: 		pwm3_caso=ciclo3_n;
0x009F	0x3005      	MOVLW      5
0x00A0	0x00A6      	MOVWF      _pwm3_caso
;MLK_RGB_Controller.c,143 :: 		}
L_Interrpcion21:
;MLK_RGB_Controller.c,144 :: 		break;
0x00A1	0x28B9      	GOTO       L_Interrpcion19
;MLK_RGB_Controller.c,146 :: 		case ciclo3_n:
L_Interrpcion23:
;MLK_RGB_Controller.c,147 :: 		if (pwm3_cont>=ciclo3_)
0x00A2	0x084C      	MOVF       _ciclo3_, 0
0x00A3	0x0222      	SUBWF      _pwm3_cont, 0
0x00A4	0x1C03      	BTFSS      STATUS, 0
0x00A5	0x28B0      	GOTO       L_Interrpcion24
;MLK_RGB_Controller.c,149 :: 		if (ciclo3_!=100) pwm3=1;
0x00A6	0x084C      	MOVF       _ciclo3_, 0
0x00A7	0x3A64      	XORLW      100
0x00A8	0x1903      	BTFSC      STATUS, 2
0x00A9	0x28AC      	GOTO       L_Interrpcion25
0x00AA	0x1283      	BCF        STATUS, 5
0x00AB	0x1506      	BSF        PORTB, 2
L_Interrpcion25:
;MLK_RGB_Controller.c,150 :: 		pwm3_cont=0;
0x00AC	0x1683      	BSF        STATUS, 5
0x00AD	0x01A2      	CLRF       _pwm3_cont
;MLK_RGB_Controller.c,151 :: 		pwm3_caso=ciclo3_p;
0x00AE	0x3004      	MOVLW      4
0x00AF	0x00A6      	MOVWF      _pwm3_caso
;MLK_RGB_Controller.c,152 :: 		}
L_Interrpcion24:
;MLK_RGB_Controller.c,153 :: 		break;
0x00B0	0x28B9      	GOTO       L_Interrpcion19
;MLK_RGB_Controller.c,155 :: 		} //switch
L_Interrpcion18:
0x00B1	0x0826      	MOVF       _pwm3_caso, 0
0x00B2	0x3A04      	XORLW      4
0x00B3	0x1903      	BTFSC      STATUS, 2
0x00B4	0x2890      	GOTO       L_Interrpcion20
0x00B5	0x0826      	MOVF       _pwm3_caso, 0
0x00B6	0x3A05      	XORLW      5
0x00B7	0x1903      	BTFSC      STATUS, 2
0x00B8	0x28A2      	GOTO       L_Interrpcion23
L_Interrpcion19:
;MLK_RGB_Controller.c,157 :: 		TMR1ON_bit=1;  //Dispara o timer1
0x00B9	0x1283      	BCF        STATUS, 5
0x00BA	0x1410      	BSF        TMR1ON_bit, BitPos(TMR1ON_bit+0)
;MLK_RGB_Controller.c,158 :: 		TMR1IF_bit=0;
0x00BB	0x100C      	BCF        TMR1IF_bit, BitPos(TMR1IF_bit+0)
;MLK_RGB_Controller.c,159 :: 		}
L_Interrpcion1:
;MLK_RGB_Controller.c,161 :: 		}
L_end_Interrpcion:
L__Interrpcion145:
0x00BC	0x0822      	MOVF       34, 0
0x00BD	0x00F0      	MOVWF      R0
0x00BE	0x0821      	MOVF       33, 0
0x00BF	0x00F1      	MOVWF      R1
0x00C0	0x0820      	MOVF       32, 0
0x00C1	0x00F2      	MOVWF      R2
0x00C2	0x1683      	BSF        STATUS, 5
0x00C3	0x0852      	MOVF       ___savePCLATH, 0
0x00C4	0x008A      	MOVWF      PCLATH
0x00C5	0x0E54      	SWAPF      ___saveSTATUS, 0
0x00C6	0x0083      	MOVWF      STATUS
0x00C7	0x0EFF      	SWAPF      R15, 1
0x00C8	0x0E7F      	SWAPF      R15, 0
0x00C9	0x0009      	RETFIE
; end of _Interrpcion
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x00CA	0x0000      	NOP
0x00CB	0x0000      	NOP
0x00CC	0x0000      	NOP
0x00CD	0x0000      	NOP
0x00CE	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x00CF	0x0008      	RETURN
; end of _Delay_1us
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x00D0	0x3024      	MOVLW      36
0x00D1	0x1283      	BCF        STATUS, 5
0x00D2	0x1303      	BCF        STATUS, 6
0x00D3	0x00FC      	MOVWF      R12
0x00D4	0x30B5      	MOVLW      181
0x00D5	0x00FD      	MOVWF      R13
L_Delay_5500us5:
0x00D6	0x0BFD      	DECFSZ     R13, 1
0x00D7	0x28D6      	GOTO       L_Delay_5500us5
0x00D8	0x0BFC      	DECFSZ     R12, 1
0x00D9	0x28D6      	GOTO       L_Delay_5500us5
0x00DA	0x0000      	NOP
0x00DB	0x0000      	NOP
;__Lib_Delays.c,33 :: 		}
L_end_Delay_5500us:
0x00DC	0x0008      	RETURN
; end of _Delay_5500us
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x00DD	0x3053      	MOVLW      83
0x00DE	0x1283      	BCF        STATUS, 5
0x00DF	0x1303      	BCF        STATUS, 6
0x00E0	0x00FD      	MOVWF      R13
L_Delay_50us2:
0x00E1	0x0BFD      	DECFSZ     R13, 1
0x00E2	0x28E1      	GOTO       L_Delay_50us2
;__Lib_Delays.c,21 :: 		}
L_end_Delay_50us:
0x00E3	0x0008      	RETURN
; end of _Delay_50us
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x00E4	0x1683      	BSF        STATUS, 5
0x00E5	0x1303      	BCF        STATUS, 6
0x00E6	0x1BEA      	BTFSC      FARG_Lcd_Cmd_out_char, 7
0x00E7	0x28EB      	GOTO       L__Lcd_Cmd21
0x00E8	0x1283      	BCF        STATUS, 5
0x00E9	0x1386      	BCF        LCD_D7, BitPos(LCD_D7+0)
0x00EA	0x28ED      	GOTO       L__Lcd_Cmd22
L__Lcd_Cmd21:
0x00EB	0x1283      	BCF        STATUS, 5
0x00EC	0x1786      	BSF        LCD_D7, BitPos(LCD_D7+0)
L__Lcd_Cmd22:
;__Lib_Lcd.c,21 :: 		
0x00ED	0x1683      	BSF        STATUS, 5
0x00EE	0x1B6A      	BTFSC      FARG_Lcd_Cmd_out_char, 6
0x00EF	0x28F3      	GOTO       L__Lcd_Cmd23
0x00F0	0x1283      	BCF        STATUS, 5
0x00F1	0x1306      	BCF        LCD_D6, BitPos(LCD_D6+0)
0x00F2	0x28F5      	GOTO       L__Lcd_Cmd24
L__Lcd_Cmd23:
0x00F3	0x1283      	BCF        STATUS, 5
0x00F4	0x1706      	BSF        LCD_D6, BitPos(LCD_D6+0)
L__Lcd_Cmd24:
;__Lib_Lcd.c,22 :: 		
0x00F5	0x1683      	BSF        STATUS, 5
0x00F6	0x1AEA      	BTFSC      FARG_Lcd_Cmd_out_char, 5
0x00F7	0x28FB      	GOTO       L__Lcd_Cmd25
0x00F8	0x1283      	BCF        STATUS, 5
0x00F9	0x1286      	BCF        LCD_D5, BitPos(LCD_D5+0)
0x00FA	0x28FD      	GOTO       L__Lcd_Cmd26
L__Lcd_Cmd25:
0x00FB	0x1283      	BCF        STATUS, 5
0x00FC	0x1686      	BSF        LCD_D5, BitPos(LCD_D5+0)
L__Lcd_Cmd26:
;__Lib_Lcd.c,23 :: 		
0x00FD	0x1683      	BSF        STATUS, 5
0x00FE	0x1A6A      	BTFSC      FARG_Lcd_Cmd_out_char, 4
0x00FF	0x2903      	GOTO       L__Lcd_Cmd27
0x0100	0x1283      	BCF        STATUS, 5
0x0101	0x1206      	BCF        LCD_D4, BitPos(LCD_D4+0)
0x0102	0x2905      	GOTO       L__Lcd_Cmd28
L__Lcd_Cmd27:
0x0103	0x1283      	BCF        STATUS, 5
0x0104	0x1606      	BSF        LCD_D4, BitPos(LCD_D4+0)
L__Lcd_Cmd28:
;__Lib_Lcd.c,25 :: 		
0x0105	0x1683      	BSF        STATUS, 5
0x0106	0x19C9      	BTFSC      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x0107	0x290B      	GOTO       L__Lcd_Cmd29
0x0108	0x1283      	BCF        STATUS, 5
0x0109	0x1405      	BSF        LCD_RS, BitPos(LCD_RS+0)
0x010A	0x290D      	GOTO       L__Lcd_Cmd30
L__Lcd_Cmd29:
0x010B	0x1283      	BCF        STATUS, 5
0x010C	0x1005      	BCF        LCD_RS, BitPos(LCD_RS+0)
L__Lcd_Cmd30:
;__Lib_Lcd.c,28 :: 		
0x010D	0x1586      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,29 :: 		
0x010E	0x20CA      	CALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x010F	0x1186      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,33 :: 		
0x0110	0x1683      	BSF        STATUS, 5
0x0111	0x19EA      	BTFSC      FARG_Lcd_Cmd_out_char, 3
0x0112	0x2916      	GOTO       L__Lcd_Cmd31
0x0113	0x1283      	BCF        STATUS, 5
0x0114	0x1386      	BCF        LCD_D7, BitPos(LCD_D7+0)
0x0115	0x2918      	GOTO       L__Lcd_Cmd32
L__Lcd_Cmd31:
0x0116	0x1283      	BCF        STATUS, 5
0x0117	0x1786      	BSF        LCD_D7, BitPos(LCD_D7+0)
L__Lcd_Cmd32:
;__Lib_Lcd.c,34 :: 		
0x0118	0x1683      	BSF        STATUS, 5
0x0119	0x196A      	BTFSC      FARG_Lcd_Cmd_out_char, 2
0x011A	0x291E      	GOTO       L__Lcd_Cmd33
0x011B	0x1283      	BCF        STATUS, 5
0x011C	0x1306      	BCF        LCD_D6, BitPos(LCD_D6+0)
0x011D	0x2920      	GOTO       L__Lcd_Cmd34
L__Lcd_Cmd33:
0x011E	0x1283      	BCF        STATUS, 5
0x011F	0x1706      	BSF        LCD_D6, BitPos(LCD_D6+0)
L__Lcd_Cmd34:
;__Lib_Lcd.c,35 :: 		
0x0120	0x1683      	BSF        STATUS, 5
0x0121	0x18EA      	BTFSC      FARG_Lcd_Cmd_out_char, 1
0x0122	0x2926      	GOTO       L__Lcd_Cmd35
0x0123	0x1283      	BCF        STATUS, 5
0x0124	0x1286      	BCF        LCD_D5, BitPos(LCD_D5+0)
0x0125	0x2928      	GOTO       L__Lcd_Cmd36
L__Lcd_Cmd35:
0x0126	0x1283      	BCF        STATUS, 5
0x0127	0x1686      	BSF        LCD_D5, BitPos(LCD_D5+0)
L__Lcd_Cmd36:
;__Lib_Lcd.c,36 :: 		
0x0128	0x1683      	BSF        STATUS, 5
0x0129	0x186A      	BTFSC      FARG_Lcd_Cmd_out_char, 0
0x012A	0x292E      	GOTO       L__Lcd_Cmd37
0x012B	0x1283      	BCF        STATUS, 5
0x012C	0x1206      	BCF        LCD_D4, BitPos(LCD_D4+0)
0x012D	0x2930      	GOTO       L__Lcd_Cmd38
L__Lcd_Cmd37:
0x012E	0x1283      	BCF        STATUS, 5
0x012F	0x1606      	BSF        LCD_D4, BitPos(LCD_D4+0)
L__Lcd_Cmd38:
;__Lib_Lcd.c,38 :: 		
0x0130	0x1683      	BSF        STATUS, 5
0x0131	0x19C9      	BTFSC      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x0132	0x2936      	GOTO       L__Lcd_Cmd39
0x0133	0x1283      	BCF        STATUS, 5
0x0134	0x1405      	BSF        LCD_RS, BitPos(LCD_RS+0)
0x0135	0x2938      	GOTO       L__Lcd_Cmd40
L__Lcd_Cmd39:
0x0136	0x1283      	BCF        STATUS, 5
0x0137	0x1005      	BCF        LCD_RS, BitPos(LCD_RS+0)
L__Lcd_Cmd40:
;__Lib_Lcd.c,40 :: 		
0x0138	0x1586      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,41 :: 		
0x0139	0x20CA      	CALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x013A	0x1186      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,44 :: 		
0x013B	0x1683      	BSF        STATUS, 5
0x013C	0x1DC9      	BTFSS      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x013D	0x2940      	GOTO       L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x013E	0x20D0      	CALL       _Delay_5500us
0x013F	0x2941      	GOTO       L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x0140	0x20DD      	CALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
L_end_Lcd_Cmd:
0x0141	0x0008      	RETURN
; end of _Lcd_Cmd
_Div_16X16_U:
;__Lib_Math.c,215 :: 		
;__Lib_Math.c,222 :: 		
0x0142	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,223 :: 		
0x0143	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,224 :: 		
0x0144	0x01F8      	CLRF       R8
;__Lib_Math.c,225 :: 		
0x0145	0x01F9      	CLRF       R9
;__Lib_Math.c,226 :: 		
0x0146	0x3010      	MOVLW      16
;__Lib_Math.c,227 :: 		
0x0147	0x00FC      	MOVWF      R12
;__Lib_Math.c,228 :: 		
0x0148	0x0D71      	RLF        R1, 0
;__Lib_Math.c,229 :: 		
0x0149	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,230 :: 		
0x014A	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,231 :: 		
0x014B	0x0874      	MOVF       R4, 0
;__Lib_Math.c,232 :: 		
0x014C	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,233 :: 		
0x014D	0x0875      	MOVF       R5, 0
;__Lib_Math.c,234 :: 		
0x014E	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,235 :: 		
0x014F	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,236 :: 		
0x0150	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,237 :: 		
0x0151	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,238 :: 		
0x0152	0x295A      	GOTO       $+8
;__Lib_Math.c,239 :: 		
0x0153	0x0874      	MOVF       R4, 0
;__Lib_Math.c,240 :: 		
0x0154	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,241 :: 		
0x0155	0x0875      	MOVF       R5, 0
;__Lib_Math.c,242 :: 		
0x0156	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,243 :: 		
0x0157	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,244 :: 		
0x0158	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,245 :: 		
0x0159	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,246 :: 		
0x015A	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,247 :: 		
0x015B	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,248 :: 		
0x015C	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,249 :: 		
0x015D	0x2948      	GOTO       $-21
;__Lib_Math.c,251 :: 		
L_end_Div_16X16_U:
0x015E	0x0008      	RETURN
; end of _Div_16X16_U
_Delay_500us:
;__Lib_Delays.c,27 :: 		void Delay_500us() {
;__Lib_Delays.c,28 :: 		Delay_us(498);
0x015F	0x3004      	MOVLW      4
0x0160	0x1283      	BCF        STATUS, 5
0x0161	0x1303      	BCF        STATUS, 6
0x0162	0x00FC      	MOVWF      R12
0x0163	0x303A      	MOVLW      58
0x0164	0x00FD      	MOVWF      R13
L_Delay_500us4:
0x0165	0x0BFD      	DECFSZ     R13, 1
0x0166	0x2965      	GOTO       L_Delay_500us4
0x0167	0x0BFC      	DECFSZ     R12, 1
0x0168	0x2965      	GOTO       L_Delay_500us4
0x0169	0x0000      	NOP
;__Lib_Delays.c,29 :: 		}
L_end_Delay_500us:
0x016A	0x0008      	RETURN
; end of _Delay_500us
_WordToStr:
;__Lib_Conversions.c,98 :: 		
;__Lib_Conversions.c,103 :: 		
0x016B	0x1683      	BSF        STATUS, 5
0x016C	0x1303      	BCF        STATUS, 6
0x016D	0x01E8      	CLRF       WordToStr_len_L0
L_WordToStr11:
0x016E	0x3005      	MOVLW      5
0x016F	0x0268      	SUBWF      WordToStr_len_L0, 0
0x0170	0x1803      	BTFSC      STATUS, 0
0x0171	0x2979      	GOTO       L_WordToStr12
;__Lib_Conversions.c,104 :: 		
0x0172	0x0868      	MOVF       WordToStr_len_L0, 0
0x0173	0x0767      	ADDWF      FARG_WordToStr_output, 0
0x0174	0x0084      	MOVWF      FSR
0x0175	0x3020      	MOVLW      32
0x0176	0x0080      	MOVWF      INDF
;__Lib_Conversions.c,103 :: 		
0x0177	0x0AE8      	INCF       WordToStr_len_L0, 1
;__Lib_Conversions.c,104 :: 		
0x0178	0x296E      	GOTO       L_WordToStr11
L_WordToStr12:
;__Lib_Conversions.c,105 :: 		
0x0179	0x0868      	MOVF       WordToStr_len_L0, 0
0x017A	0x0767      	ADDWF      FARG_WordToStr_output, 0
0x017B	0x0084      	MOVWF      FSR
0x017C	0x0180      	CLRF       INDF
0x017D	0x03E8      	DECF       WordToStr_len_L0, 1
;__Lib_Conversions.c,107 :: 		
L_WordToStr14:
;__Lib_Conversions.c,108 :: 		
0x017E	0x0868      	MOVF       WordToStr_len_L0, 0
0x017F	0x0767      	ADDWF      FARG_WordToStr_output, 0
0x0180	0x00E9      	MOVWF      FLOC__WordToStr
0x0181	0x300A      	MOVLW      10
0x0182	0x00F4      	MOVWF      R4
0x0183	0x01F5      	CLRF       R4+1
0x0184	0x0865      	MOVF       FARG_WordToStr_input, 0
0x0185	0x00F0      	MOVWF      R0
0x0186	0x0866      	MOVF       FARG_WordToStr_input+1, 0
0x0187	0x00F1      	MOVWF      R0+1
0x0188	0x2142      	CALL       _Div_16X16_U
0x0189	0x0878      	MOVF       R8, 0
0x018A	0x00F0      	MOVWF      R0
0x018B	0x0879      	MOVF       R8+1, 0
0x018C	0x00F1      	MOVWF      R0+1
0x018D	0x3030      	MOVLW      48
0x018E	0x07F0      	ADDWF      R0, 1
0x018F	0x1683      	BSF        STATUS, 5
0x0190	0x0869      	MOVF       FLOC__WordToStr, 0
0x0191	0x0084      	MOVWF      FSR
0x0192	0x0870      	MOVF       R0, 0
0x0193	0x0080      	MOVWF      INDF
;__Lib_Conversions.c,109 :: 		
0x0194	0x300A      	MOVLW      10
0x0195	0x00F4      	MOVWF      R4
0x0196	0x01F5      	CLRF       R4+1
0x0197	0x0865      	MOVF       FARG_WordToStr_input, 0
0x0198	0x00F0      	MOVWF      R0
0x0199	0x0866      	MOVF       FARG_WordToStr_input+1, 0
0x019A	0x00F1      	MOVWF      R0+1
0x019B	0x2142      	CALL       _Div_16X16_U
0x019C	0x0870      	MOVF       R0, 0
0x019D	0x1683      	BSF        STATUS, 5
0x019E	0x00E5      	MOVWF      FARG_WordToStr_input
0x019F	0x0871      	MOVF       R0+1, 0
0x01A0	0x00E6      	MOVWF      FARG_WordToStr_input+1
;__Lib_Conversions.c,110 :: 		
0x01A1	0x3000      	MOVLW      0
0x01A2	0x0671      	XORWF      R0+1, 0
0x01A3	0x1D03      	BTFSS      STATUS, 2
0x01A4	0x29A7      	GOTO       L__WordToStr379
0x01A5	0x3000      	MOVLW      0
0x01A6	0x0670      	XORWF      R0, 0
L__WordToStr379:
0x01A7	0x1D03      	BTFSS      STATUS, 2
0x01A8	0x29AA      	GOTO       L_WordToStr16
;__Lib_Conversions.c,111 :: 		
0x01A9	0x29AC      	GOTO       L_WordToStr15
L_WordToStr16:
;__Lib_Conversions.c,112 :: 		
0x01AA	0x03E8      	DECF       WordToStr_len_L0, 1
;__Lib_Conversions.c,113 :: 		
0x01AB	0x297E      	GOTO       L_WordToStr14
L_WordToStr15:
;__Lib_Conversions.c,114 :: 		
L_end_WordToStr:
0x01AC	0x0008      	RETURN
; end of _WordToStr
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x01AD	0x1683      	BSF        STATUS, 5
0x01AE	0x1303      	BCF        STATUS, 6
0x01AF	0x11C9      	BCF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,53 :: 		
0x01B0	0x0865      	MOVF       FARG_Lcd_Chr_CP_out_char, 0
0x01B1	0x00EA      	MOVWF      FARG_Lcd_Cmd_out_char
0x01B2	0x20E4      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x01B3	0x1683      	BSF        STATUS, 5
0x01B4	0x15C9      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,55 :: 		
L_end_Lcd_Chr_CP:
0x01B5	0x0008      	RETURN
; end of _Lcd_Chr_CP
_Button:
;__Lib_Button.c,6 :: 		
;__Lib_Button.c,8 :: 		
0x01B6	0x1683      	BSF        STATUS, 5
0x01B7	0x1303      	BCF        STATUS, 6
0x01B8	0x01E1      	CLRF       Button_rslt_L0
;__Lib_Button.c,11 :: 		
0x01B9	0x085D      	MOVF       FARG_Button_pin, 0
0x01BA	0x00F1      	MOVWF      R1
0x01BB	0x3001      	MOVLW      1
0x01BC	0x00F0      	MOVWF      R0
0x01BD	0x0871      	MOVF       R1, 0
L__Button5:
0x01BE	0x1903      	BTFSC      STATUS, 2
0x01BF	0x29C4      	GOTO       L__Button6
0x01C0	0x0DF0      	RLF        R0, 1
0x01C1	0x1070      	BCF        R0, 0
0x01C2	0x3EFF      	ADDLW      255
0x01C3	0x29BE      	GOTO       L__Button5
L__Button6:
0x01C4	0x0870      	MOVF       R0, 0
0x01C5	0x00E0      	MOVWF      Button_pMask_L0
;__Lib_Button.c,13 :: 		
0x01C6	0x085C      	MOVF       FARG_Button_port, 0
0x01C7	0x0084      	MOVWF      FSR
0x01C8	0x0870      	MOVF       R0, 0
0x01C9	0x0500      	ANDWF      INDF, 0
0x01CA	0x00F1      	MOVWF      R1
0x01CB	0x0871      	MOVF       R1, 0
0x01CC	0x3001      	MOVLW      1
0x01CD	0x1D03      	BTFSS      STATUS, 2
0x01CE	0x3000      	MOVLW      0
0x01CF	0x00F0      	MOVWF      R0
0x01D0	0x085F      	MOVF       FARG_Button_active_state, 0
0x01D1	0x06F0      	XORWF      R0, 1
0x01D2	0x1903      	BTFSC      STATUS, 2
0x01D3	0x29ED      	GOTO       L_Button0
;__Lib_Button.c,15 :: 		
L_Button1:
0x01D4	0x085E      	MOVF       FARG_Button_time_ms, 0
0x01D5	0x3C00      	SUBLW      0
0x01D6	0x1803      	BTFSC      STATUS, 0
0x01D7	0x29DD      	GOTO       L_Button2
;__Lib_Button.c,16 :: 		
0x01D8	0x215F      	CALL       _Delay_500us
;__Lib_Button.c,17 :: 		
0x01D9	0x215F      	CALL       _Delay_500us
;__Lib_Button.c,18 :: 		
0x01DA	0x1683      	BSF        STATUS, 5
0x01DB	0x03DE      	DECF       FARG_Button_time_ms, 1
;__Lib_Button.c,19 :: 		
0x01DC	0x29D4      	GOTO       L_Button1
L_Button2:
;__Lib_Button.c,21 :: 		
0x01DD	0x085C      	MOVF       FARG_Button_port, 0
0x01DE	0x0084      	MOVWF      FSR
0x01DF	0x0860      	MOVF       Button_pMask_L0, 0
0x01E0	0x0500      	ANDWF      INDF, 0
0x01E1	0x00F1      	MOVWF      R1
0x01E2	0x0871      	MOVF       R1, 0
0x01E3	0x3001      	MOVLW      1
0x01E4	0x1D03      	BTFSS      STATUS, 2
0x01E5	0x3000      	MOVLW      0
0x01E6	0x00F0      	MOVWF      R0
0x01E7	0x085F      	MOVF       FARG_Button_active_state, 0
0x01E8	0x06F0      	XORWF      R0, 1
0x01E9	0x1903      	BTFSC      STATUS, 2
0x01EA	0x29ED      	GOTO       L_Button3
;__Lib_Button.c,22 :: 		
0x01EB	0x30FF      	MOVLW      255
0x01EC	0x00E1      	MOVWF      Button_rslt_L0
L_Button3:
;__Lib_Button.c,23 :: 		
L_Button0:
;__Lib_Button.c,25 :: 		
0x01ED	0x0861      	MOVF       Button_rslt_L0, 0
0x01EE	0x00F0      	MOVWF      R0
;__Lib_Button.c,26 :: 		
L_end_Button:
0x01EF	0x0008      	RETURN
; end of _Button
_IntToStr:
;__Lib_Conversions.c,195 :: 		
;__Lib_Conversions.c,201 :: 		
0x01F0	0x1683      	BSF        STATUS, 5
0x01F1	0x1303      	BCF        STATUS, 6
0x01F2	0x01E1      	CLRF       IntToStr_negative_L0
0x01F3	0x01E2      	CLRF       IntToStr_negative_L0+1
;__Lib_Conversions.c,202 :: 		
0x01F4	0x085C      	MOVF       FARG_IntToStr_input, 0
0x01F5	0x00E3      	MOVWF      IntToStr_inword_L0
0x01F6	0x085D      	MOVF       FARG_IntToStr_input+1, 0
0x01F7	0x00E4      	MOVWF      IntToStr_inword_L0+1
;__Lib_Conversions.c,203 :: 		
0x01F8	0x3080      	MOVLW      128
0x01F9	0x065D      	XORWF      FARG_IntToStr_input+1, 0
0x01FA	0x00F0      	MOVWF      R0
0x01FB	0x3080      	MOVLW      128
0x01FC	0x0270      	SUBWF      R0, 0
0x01FD	0x1D03      	BTFSS      STATUS, 2
0x01FE	0x2A01      	GOTO       L__IntToStr387
0x01FF	0x3000      	MOVLW      0
0x0200	0x025C      	SUBWF      FARG_IntToStr_input, 0
L__IntToStr387:
0x0201	0x1803      	BTFSC      STATUS, 0
0x0202	0x2A0F      	GOTO       L_IntToStr37
;__Lib_Conversions.c,204 :: 		
0x0203	0x3001      	MOVLW      1
0x0204	0x00E1      	MOVWF      IntToStr_negative_L0
0x0205	0x3000      	MOVLW      0
0x0206	0x00E2      	MOVWF      IntToStr_negative_L0+1
;__Lib_Conversions.c,205 :: 		
0x0207	0x085C      	MOVF       FARG_IntToStr_input, 0
0x0208	0x3C00      	SUBLW      0
0x0209	0x00E3      	MOVWF      IntToStr_inword_L0
0x020A	0x085D      	MOVF       FARG_IntToStr_input+1, 0
0x020B	0x1C03      	BTFSS      STATUS, 0
0x020C	0x3E01      	ADDLW      1
0x020D	0x01E4      	CLRF       IntToStr_inword_L0+1
0x020E	0x02E4      	SUBWF      IntToStr_inword_L0+1, 1
;__Lib_Conversions.c,206 :: 		
L_IntToStr37:
;__Lib_Conversions.c,207 :: 		
0x020F	0x0863      	MOVF       IntToStr_inword_L0, 0
0x0210	0x00E5      	MOVWF      FARG_WordToStr_input
0x0211	0x0864      	MOVF       IntToStr_inword_L0+1, 0
0x0212	0x00E6      	MOVWF      FARG_WordToStr_input+1
0x0213	0x085E      	MOVF       FARG_IntToStr_output, 0
0x0214	0x00E7      	MOVWF      FARG_WordToStr_output
0x0215	0x216B      	CALL       _WordToStr
;__Lib_Conversions.c,209 :: 		
0x0216	0x3006      	MOVLW      6
0x0217	0x00DF      	MOVWF      IntToStr_i_L0
0x0218	0x3000      	MOVLW      0
0x0219	0x00E0      	MOVWF      IntToStr_i_L0+1
;__Lib_Conversions.c,210 :: 		
L_IntToStr38:
0x021A	0x0860      	MOVF       IntToStr_i_L0+1, 0
0x021B	0x3C00      	SUBLW      0
0x021C	0x1D03      	BTFSS      STATUS, 2
0x021D	0x2A20      	GOTO       L__IntToStr388
0x021E	0x085F      	MOVF       IntToStr_i_L0, 0
0x021F	0x3C00      	SUBLW      0
L__IntToStr388:
0x0220	0x1803      	BTFSC      STATUS, 0
0x0221	0x2A3B      	GOTO       L_IntToStr39
;__Lib_Conversions.c,211 :: 		
0x0222	0x085F      	MOVF       IntToStr_i_L0, 0
0x0223	0x075E      	ADDWF      FARG_IntToStr_output, 0
0x0224	0x00F2      	MOVWF      R2
0x0225	0x3001      	MOVLW      1
0x0226	0x025F      	SUBWF      IntToStr_i_L0, 0
0x0227	0x00F0      	MOVWF      R0
0x0228	0x3000      	MOVLW      0
0x0229	0x1C03      	BTFSS      STATUS, 0
0x022A	0x3E01      	ADDLW      1
0x022B	0x0260      	SUBWF      IntToStr_i_L0+1, 0
0x022C	0x00F1      	MOVWF      R0+1
0x022D	0x0870      	MOVF       R0, 0
0x022E	0x075E      	ADDWF      FARG_IntToStr_output, 0
0x022F	0x0084      	MOVWF      FSR
0x0230	0x0800      	MOVF       INDF, 0
0x0231	0x00F0      	MOVWF      R0
0x0232	0x0872      	MOVF       R2, 0
0x0233	0x0084      	MOVWF      FSR
0x0234	0x0870      	MOVF       R0, 0
0x0235	0x0080      	MOVWF      INDF
;__Lib_Conversions.c,212 :: 		
0x0236	0x3001      	MOVLW      1
0x0237	0x02DF      	SUBWF      IntToStr_i_L0, 1
0x0238	0x1C03      	BTFSS      STATUS, 0
0x0239	0x03E0      	DECF       IntToStr_i_L0+1, 1
;__Lib_Conversions.c,213 :: 		
0x023A	0x2A1A      	GOTO       L_IntToStr38
L_IntToStr39:
;__Lib_Conversions.c,214 :: 		
0x023B	0x085E      	MOVF       FARG_IntToStr_output, 0
0x023C	0x0084      	MOVWF      FSR
0x023D	0x3020      	MOVLW      32
0x023E	0x0080      	MOVWF      INDF
;__Lib_Conversions.c,215 :: 		
0x023F	0x0861      	MOVF       IntToStr_negative_L0, 0
0x0240	0x0462      	IORWF      IntToStr_negative_L0+1, 0
0x0241	0x1903      	BTFSC      STATUS, 2
0x0242	0x2A59      	GOTO       L_IntToStr40
;__Lib_Conversions.c,216 :: 		
0x0243	0x01DF      	CLRF       IntToStr_i_L0
0x0244	0x01E0      	CLRF       IntToStr_i_L0+1
;__Lib_Conversions.c,217 :: 		
L_IntToStr41:
0x0245	0x085F      	MOVF       IntToStr_i_L0, 0
0x0246	0x075E      	ADDWF      FARG_IntToStr_output, 0
0x0247	0x0084      	MOVWF      FSR
0x0248	0x0800      	MOVF       INDF, 0
0x0249	0x3A20      	XORLW      32
0x024A	0x1D03      	BTFSS      STATUS, 2
0x024B	0x2A50      	GOTO       L_IntToStr42
0x024C	0x0ADF      	INCF       IntToStr_i_L0, 1
0x024D	0x1903      	BTFSC      STATUS, 2
0x024E	0x0AE0      	INCF       IntToStr_i_L0+1, 1
0x024F	0x2A45      	GOTO       L_IntToStr41
L_IntToStr42:
;__Lib_Conversions.c,218 :: 		
0x0250	0x3001      	MOVLW      1
0x0251	0x02DF      	SUBWF      IntToStr_i_L0, 1
0x0252	0x1C03      	BTFSS      STATUS, 0
0x0253	0x03E0      	DECF       IntToStr_i_L0+1, 1
;__Lib_Conversions.c,219 :: 		
0x0254	0x085F      	MOVF       IntToStr_i_L0, 0
0x0255	0x075E      	ADDWF      FARG_IntToStr_output, 0
0x0256	0x0084      	MOVWF      FSR
0x0257	0x302D      	MOVLW      45
0x0258	0x0080      	MOVWF      INDF
L_IntToStr40:
;__Lib_Conversions.c,220 :: 		
L_end_IntToStr:
0x0259	0x0008      	RETURN
; end of _IntToStr
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x025A	0x2A6C      	GOTO       L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x025B	0x3080      	MOVLW      128
0x025C	0x1683      	BSF        STATUS, 5
0x025D	0x1303      	BCF        STATUS, 6
0x025E	0x00DC      	MOVWF      FARG_Lcd_Out_row
0x025F	0x2A7F      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x0260	0x30C0      	MOVLW      192
0x0261	0x00DC      	MOVWF      FARG_Lcd_Out_row
0x0262	0x2A7F      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x0263	0x3094      	MOVLW      148
0x0264	0x00DC      	MOVWF      FARG_Lcd_Out_row
0x0265	0x2A7F      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x0266	0x30D4      	MOVLW      212
0x0267	0x00DC      	MOVWF      FARG_Lcd_Out_row
0x0268	0x2A7F      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x0269	0x3080      	MOVLW      128
0x026A	0x00DC      	MOVWF      FARG_Lcd_Out_row
;__Lib_Lcd.c,193 :: 		
0x026B	0x2A7F      	GOTO       L_Lcd_Out12
L_Lcd_Out11:
0x026C	0x1683      	BSF        STATUS, 5
0x026D	0x1303      	BCF        STATUS, 6
0x026E	0x085C      	MOVF       FARG_Lcd_Out_row, 0
0x026F	0x3A01      	XORLW      1
0x0270	0x1903      	BTFSC      STATUS, 2
0x0271	0x2A5B      	GOTO       L_Lcd_Out13
0x0272	0x085C      	MOVF       FARG_Lcd_Out_row, 0
0x0273	0x3A02      	XORLW      2
0x0274	0x1903      	BTFSC      STATUS, 2
0x0275	0x2A60      	GOTO       L_Lcd_Out14
0x0276	0x085C      	MOVF       FARG_Lcd_Out_row, 0
0x0277	0x3A03      	XORLW      3
0x0278	0x1903      	BTFSC      STATUS, 2
0x0279	0x2A63      	GOTO       L_Lcd_Out15
0x027A	0x085C      	MOVF       FARG_Lcd_Out_row, 0
0x027B	0x3A04      	XORLW      4
0x027C	0x1903      	BTFSC      STATUS, 2
0x027D	0x2A66      	GOTO       L_Lcd_Out16
0x027E	0x2A69      	GOTO       L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x027F	0x035D      	DECF       FARG_Lcd_Out_column, 0
0x0280	0x00F0      	MOVWF      R0
0x0281	0x085C      	MOVF       FARG_Lcd_Out_row, 0
0x0282	0x07F0      	ADDWF      R0, 1
0x0283	0x0870      	MOVF       R0, 0
0x0284	0x00DC      	MOVWF      FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x0285	0x0870      	MOVF       R0, 0
0x0286	0x00EA      	MOVWF      FARG_Lcd_Cmd_out_char
0x0287	0x20E4      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,197 :: 		
0x0288	0x1683      	BSF        STATUS, 5
0x0289	0x11C9      	BCF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,198 :: 		
0x028A	0x01DF      	CLRF       Lcd_Out_i_L0
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x028B	0x085F      	MOVF       Lcd_Out_i_L0, 0
0x028C	0x075E      	ADDWF      FARG_Lcd_Out_text, 0
0x028D	0x0084      	MOVWF      FSR
0x028E	0x0800      	MOVF       INDF, 0
0x028F	0x1903      	BTFSC      STATUS, 2
0x0290	0x2A99      	GOTO       L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x0291	0x085F      	MOVF       Lcd_Out_i_L0, 0
0x0292	0x075E      	ADDWF      FARG_Lcd_Out_text, 0
0x0293	0x0084      	MOVWF      FSR
0x0294	0x0800      	MOVF       INDF, 0
0x0295	0x00E5      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0296	0x21AD      	CALL       _Lcd_Chr_CP
0x0297	0x0ADF      	INCF       Lcd_Out_i_L0, 1
0x0298	0x2A8B      	GOTO       L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x0299	0x15C9      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,202 :: 		
L_end_Lcd_Out:
0x029A	0x0008      	RETURN
; end of _Lcd_Out
_Div_16x16_S_L:
;__Lib_Math.c,421 :: 		
;__Lib_Math.c,427 :: 		
0x029B	0x0D71      	RLF        R1, 0
;__Lib_Math.c,428 :: 		
0x029C	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,429 :: 		
0x029D	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,430 :: 		
0x029E	0x0874      	MOVF       R4, 0
;__Lib_Math.c,431 :: 		
0x029F	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,432 :: 		
0x02A0	0x0875      	MOVF       R5, 0
;__Lib_Math.c,433 :: 		
0x02A1	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,434 :: 		
0x02A2	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,435 :: 		
0x02A3	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,436 :: 		
0x02A4	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,437 :: 		
0x02A5	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,439 :: 		
0x02A6	0x300F      	MOVLW      15
;__Lib_Math.c,440 :: 		
0x02A7	0x00FC      	MOVWF      R12
;__Lib_Math.c,442 :: 		
0x02A8	0x0D71      	RLF        R1, 0
;__Lib_Math.c,443 :: 		
0x02A9	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,444 :: 		
0x02AA	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,445 :: 		
0x02AB	0x0874      	MOVF       R4, 0
;__Lib_Math.c,447 :: 		
0x02AC	0x1C70      	BTFSS      R0, 0
;__Lib_Math.c,448 :: 		
0x02AD	0x2AB4      	GOTO       $+7
;__Lib_Math.c,449 :: 		
0x02AE	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,450 :: 		
0x02AF	0x0875      	MOVF       R5, 0
;__Lib_Math.c,451 :: 		
0x02B0	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,452 :: 		
0x02B1	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,453 :: 		
0x02B2	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,454 :: 		
0x02B3	0x2AB9      	GOTO       $+6
;__Lib_Math.c,456 :: 		
0x02B4	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,457 :: 		
0x02B5	0x0875      	MOVF       R5, 0
;__Lib_Math.c,458 :: 		
0x02B6	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,459 :: 		
0x02B7	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,460 :: 		
0x02B8	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,462 :: 		
0x02B9	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,463 :: 		
0x02BA	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,465 :: 		
0x02BB	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,466 :: 		
0x02BC	0x2AA8      	GOTO       $-20
;__Lib_Math.c,468 :: 		
0x02BD	0x1870      	BTFSC      R0, 0
;__Lib_Math.c,469 :: 		
0x02BE	0x2AC5      	GOTO       $+7
;__Lib_Math.c,470 :: 		
0x02BF	0x0874      	MOVF       R4, 0
;__Lib_Math.c,471 :: 		
0x02C0	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,472 :: 		
0x02C1	0x0875      	MOVF       R5, 0
;__Lib_Math.c,473 :: 		
0x02C2	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,474 :: 		
0x02C3	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,475 :: 		
0x02C4	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,476 :: 		
0x02C5	0x0000      	NOP
;__Lib_Math.c,478 :: 		
L_end_Div_16x16_S_L:
0x02C6	0x0008      	RETURN
; end of _Div_16x16_S_L
_Mul_8X8_U:
;__Lib_Math.c,103 :: 		
;__Lib_Math.c,108 :: 		
0x02C7	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,109 :: 		
0x02C8	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,110 :: 		
0x02C9	0x0870      	MOVF       R0, 0
;__Lib_Math.c,111 :: 		
0x02CA	0x00F1      	MOVWF      R1
;__Lib_Math.c,112 :: 		
0x02CB	0x01F0      	CLRF       R0
;__Lib_Math.c,113 :: 		
0x02CC	0x3008      	MOVLW      8
;__Lib_Math.c,114 :: 		
0x02CD	0x00FC      	MOVWF      R12
;__Lib_Math.c,115 :: 		
0x02CE	0x0871      	MOVF       R1, 0
;__Lib_Math.c,116 :: 		
0x02CF	0x0CF4      	RRF        R4, 1
;__Lib_Math.c,117 :: 		
0x02D0	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,118 :: 		
0x02D1	0x2AD6      	GOTO       $+5
;__Lib_Math.c,119 :: 		
0x02D2	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,120 :: 		
0x02D3	0x2ACF      	GOTO       $-4
;__Lib_Math.c,121 :: 		
0x02D4	0x01F1      	CLRF       R1
;__Lib_Math.c,122 :: 		
0x02D5	0x3400      	RETLW      0
;__Lib_Math.c,123 :: 		
0x02D6	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,124 :: 		
0x02D7	0x2ADB      	GOTO       $+4
;__Lib_Math.c,125 :: 		
0x02D8	0x0CF4      	RRF        R4, 1
;__Lib_Math.c,126 :: 		
0x02D9	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,127 :: 		
0x02DA	0x07F1      	ADDWF      R1, 1
;__Lib_Math.c,128 :: 		
0x02DB	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,129 :: 		
0x02DC	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,130 :: 		
0x02DD	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,131 :: 		
0x02DE	0x2AD8      	GOTO       $-6
;__Lib_Math.c,133 :: 		
;__Lib_Math.c,134 :: 		
L_end_Mul_8X8_U:
0x02DF	0x0008      	RETURN
; end of _Mul_8X8_U
_Div_8X8_U:
;__Lib_Math.c,189 :: 		
;__Lib_Math.c,196 :: 		
0x02E0	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,197 :: 		
0x02E1	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,198 :: 		
0x02E2	0x01F8      	CLRF       R8
;__Lib_Math.c,199 :: 		
0x02E3	0x3008      	MOVLW      8
;__Lib_Math.c,200 :: 		
0x02E4	0x00FC      	MOVWF      R12
;__Lib_Math.c,201 :: 		
0x02E5	0x0D70      	RLF        R0, 0
;__Lib_Math.c,202 :: 		
0x02E6	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,203 :: 		
0x02E7	0x0874      	MOVF       R4, 0
;__Lib_Math.c,204 :: 		
0x02E8	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,205 :: 		
0x02E9	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,206 :: 		
0x02EA	0x2AED      	GOTO       $+3
;__Lib_Math.c,207 :: 		
0x02EB	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,208 :: 		
0x02EC	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,209 :: 		
0x02ED	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,210 :: 		
0x02EE	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,211 :: 		
0x02EF	0x2AE5      	GOTO       $-10
;__Lib_Math.c,213 :: 		
L_end_Div_8X8_U:
0x02F0	0x0008      	RETURN
; end of _Div_8X8_U
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x02F1	0x1683      	BSF        STATUS, 5
0x02F2	0x1303      	BCF        STATUS, 6
0x02F3	0x0856      	MOVF       ___DoICPAddr+1, 0
0x02F4	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x02F5	0x0855      	MOVF       ___DoICPAddr, 0
0x02F6	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x02F7	0x0008      	RETURN
; end of _____DoICP
_Div_16x16_S:
;__Lib_Math.c,480 :: 		
;__Lib_Math.c,488 :: 		
0x02F8	0x1283      	BCF        STATUS, 5
0x02F9	0x1303      	BCF        STATUS, 6
0x02FA	0x0874      	MOVF       R4, 0
0x02FB	0x3A00      	XORLW      0
0x02FC	0x1D03      	BTFSS      STATUS, 2
0x02FD	0x2B07      	GOTO       L_Div_16x16_S0
;__Lib_Math.c,489 :: 		
0x02FE	0x0875      	MOVF       R5, 0
0x02FF	0x3A00      	XORLW      0
0x0300	0x1D03      	BTFSS      STATUS, 2
0x0301	0x2B07      	GOTO       L_Div_16x16_S1
;__Lib_Math.c,490 :: 		
0x0302	0x30FF      	MOVLW      255
0x0303	0x00F0      	MOVWF      R0
;__Lib_Math.c,491 :: 		
0x0304	0x307F      	MOVLW      127
0x0305	0x00F1      	MOVWF      R1
;__Lib_Math.c,492 :: 		
0x0306	0x2B60      	GOTO       L_end_Div_16x16_S
;__Lib_Math.c,493 :: 		
L_Div_16x16_S1:
L_Div_16x16_S0:
;__Lib_Math.c,496 :: 		
0x0307	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,497 :: 		
0x0308	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,498 :: 		
0x0309	0x01FD      	CLRF       R13
;__Lib_Math.c,499 :: 		
0x030A	0x01F9      	CLRF       R9
;__Lib_Math.c,500 :: 		
0x030B	0x01F8      	CLRF       R8
;__Lib_Math.c,501 :: 		
0x030C	0x0871      	MOVF       R1, 0
;__Lib_Math.c,502 :: 		
0x030D	0x0470      	IORWF      R0, 0
;__Lib_Math.c,503 :: 		
0x030E	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,504 :: 		
0x030F	0x3400      	RETLW      0
;__Lib_Math.c,506 :: 		
0x0310	0x0871      	MOVF       R1, 0
;__Lib_Math.c,507 :: 		
0x0311	0x0675      	XORWF      R5, 0
;__Lib_Math.c,508 :: 		
0x0312	0x00FA      	MOVWF      R10
;__Lib_Math.c,509 :: 		
0x0313	0x1BFA      	BTFSC      R10, 7
;__Lib_Math.c,510 :: 		
0x0314	0x09FD      	COMF       R13, 1
;__Lib_Math.c,512 :: 		
0x0315	0x01FB      	CLRF       R11
;__Lib_Math.c,514 :: 		
0x0316	0x1FF5      	BTFSS      R5, 7
;__Lib_Math.c,515 :: 		
0x0317	0x2B1D      	GOTO       $+6
;__Lib_Math.c,517 :: 		
0x0318	0x09F4      	COMF       R4, 1
;__Lib_Math.c,518 :: 		
0x0319	0x09F5      	COMF       R5, 1
;__Lib_Math.c,519 :: 		
0x031A	0x0AF4      	INCF       R4, 1
;__Lib_Math.c,520 :: 		
0x031B	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,521 :: 		
0x031C	0x0AF5      	INCF       R5, 1
;__Lib_Math.c,523 :: 		
0x031D	0x1FF1      	BTFSS      R1, 7
;__Lib_Math.c,524 :: 		
0x031E	0x2B24      	GOTO       $+6
;__Lib_Math.c,526 :: 		
0x031F	0x09F0      	COMF       R0, 1
;__Lib_Math.c,527 :: 		
0x0320	0x09F1      	COMF       R1, 1
;__Lib_Math.c,528 :: 		
0x0321	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,529 :: 		
0x0322	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,530 :: 		
0x0323	0x0AF1      	INCF       R1, 1
;__Lib_Math.c,532 :: 		
0x0324	0x0871      	MOVF       R1, 0
;__Lib_Math.c,533 :: 		
0x0325	0x0475      	IORWF      R5, 0
;__Lib_Math.c,534 :: 		
0x0326	0x00FA      	MOVWF      R10
;__Lib_Math.c,535 :: 		
0x0327	0x1BFA      	BTFSC      R10, 7
;__Lib_Math.c,536 :: 		
0x0328	0x2B39      	GOTO       $+17
;__Lib_Math.c,538 :: 		
0x0329	0x229B      	CALL       _Div_16x16_S_L
;__Lib_Math.c,540 :: 		
0x032A	0x187B      	BTFSC      R11, 0
;__Lib_Math.c,541 :: 		
0x032B	0x2B4C      	GOTO       $+33
;__Lib_Math.c,543 :: 		
0x032C	0x1FFD      	BTFSS      R13, 7
;__Lib_Math.c,544 :: 		
0x032D	0x3400      	RETLW      0
;__Lib_Math.c,546 :: 		
0x032E	0x09F0      	COMF       R0, 1
;__Lib_Math.c,547 :: 		
0x032F	0x09F1      	COMF       R1, 1
;__Lib_Math.c,548 :: 		
0x0330	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,549 :: 		
0x0331	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,550 :: 		
0x0332	0x0AF1      	INCF       R1, 1
;__Lib_Math.c,552 :: 		
0x0333	0x09F8      	COMF       R8, 1
;__Lib_Math.c,553 :: 		
0x0334	0x09F9      	COMF       R9, 1
;__Lib_Math.c,554 :: 		
0x0335	0x0AF8      	INCF       R8, 1
;__Lib_Math.c,555 :: 		
0x0336	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,556 :: 		
0x0337	0x0AF9      	INCF       R9, 1
;__Lib_Math.c,558 :: 		
0x0338	0x3400      	RETLW      0
;__Lib_Math.c,560 :: 		
0x0339	0x1FF5      	BTFSS      R5, 7
;__Lib_Math.c,561 :: 		
0x033A	0x2B48      	GOTO       $+14
;__Lib_Math.c,562 :: 		
0x033B	0x1BF1      	BTFSC      R1, 7
;__Lib_Math.c,563 :: 		
0x033C	0x2B44      	GOTO       $+8
;__Lib_Math.c,564 :: 		
0x033D	0x0871      	MOVF       R1, 0
;__Lib_Math.c,565 :: 		
0x033E	0x00F9      	MOVWF      R9
;__Lib_Math.c,566 :: 		
0x033F	0x0870      	MOVF       R0, 0
;__Lib_Math.c,567 :: 		
0x0340	0x00F8      	MOVWF      R8
;__Lib_Math.c,568 :: 		
0x0341	0x01F1      	CLRF       R1
;__Lib_Math.c,569 :: 		
0x0342	0x01F0      	CLRF       R0
;__Lib_Math.c,570 :: 		
0x0343	0x2B2C      	GOTO       $-23
;__Lib_Math.c,571 :: 		
0x0344	0x01F1      	CLRF       R1
;__Lib_Math.c,572 :: 		
0x0345	0x01F0      	CLRF       R0
;__Lib_Math.c,573 :: 		
0x0346	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,574 :: 		
0x0347	0x3400      	RETLW      0
;__Lib_Math.c,576 :: 		
0x0348	0x09F1      	COMF       R1, 1
;__Lib_Math.c,577 :: 		
0x0349	0x09F0      	COMF       R0, 1
;__Lib_Math.c,578 :: 		
0x034A	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,579 :: 		
0x034B	0x2B29      	GOTO       $-34
;__Lib_Math.c,581 :: 		
0x034C	0x0AF8      	INCF       R8, 1
;__Lib_Math.c,582 :: 		
0x034D	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,583 :: 		
0x034E	0x0AF9      	INCF       R9, 1
;__Lib_Math.c,584 :: 		
0x034F	0x0874      	MOVF       R4, 0
;__Lib_Math.c,585 :: 		
0x0350	0x0278      	SUBWF      R8, 0
;__Lib_Math.c,586 :: 		
0x0351	0x1D03      	BTFSS      STATUS, 2
;__Lib_Math.c,587 :: 		
0x0352	0x2B2C      	GOTO       $-38
;__Lib_Math.c,588 :: 		
0x0353	0x0875      	MOVF       R5, 0
;__Lib_Math.c,589 :: 		
0x0354	0x0279      	SUBWF      R9, 0
;__Lib_Math.c,590 :: 		
0x0355	0x1D03      	BTFSS      STATUS, 2
;__Lib_Math.c,591 :: 		
0x0356	0x2B2C      	GOTO       $-42
;__Lib_Math.c,592 :: 		
0x0357	0x01F9      	CLRF       R9
;__Lib_Math.c,593 :: 		
0x0358	0x01F8      	CLRF       R8
;__Lib_Math.c,594 :: 		
0x0359	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,595 :: 		
0x035A	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,596 :: 		
0x035B	0x0AF1      	INCF       R1, 1
;__Lib_Math.c,597 :: 		
0x035C	0x1FF1      	BTFSS      R1, 7
;__Lib_Math.c,598 :: 		
0x035D	0x2B2C      	GOTO       $-49
;__Lib_Math.c,599 :: 		
0x035E	0x0000      	NOP
;__Lib_Math.c,600 :: 		
0x035F	0x34FF      	RETLW      255
;__Lib_Math.c,602 :: 		
L_end_Div_16x16_S:
0x0360	0x0008      	RETURN
; end of _Div_16x16_S
_fadeEffect:
;MLK_RGB_Controller.c,289 :: 		void fadeEffect(char red1, char green1,char blue1){
;MLK_RGB_Controller.c,291 :: 		if(contador==1){
0x0361	0x1683      	BSF        STATUS, 5
0x0362	0x1303      	BCF        STATUS, 6
0x0363	0x1F49      	BTFSS      _contador, BitPos(_contador+0)
0x0364	0x2B9B      	GOTO       L_fadeEffect81
;MLK_RGB_Controller.c,292 :: 		if(brilho==0&&fcor==0){
0x0365	0x1283      	BCF        STATUS, 5
0x0366	0x0853      	MOVF       _brilho, 0
0x0367	0x3A00      	XORLW      0
0x0368	0x1D03      	BTFSS      STATUS, 2
0x0369	0x2B73      	GOTO       L_fadeEffect84
0x036A	0x1683      	BSF        STATUS, 5
0x036B	0x1849      	BTFSC      _fcor, BitPos(_fcor+0)
0x036C	0x2B73      	GOTO       L_fadeEffect84
L__fadeEffect139:
;MLK_RGB_Controller.c,293 :: 		red=red1;
0x036D	0x0857      	MOVF       FARG_fadeEffect_red1, 0
0x036E	0x00AD      	MOVWF      _red
;MLK_RGB_Controller.c,294 :: 		green=green1;
0x036F	0x0858      	MOVF       FARG_fadeEffect_green1, 0
0x0370	0x00B9      	MOVWF      _green
;MLK_RGB_Controller.c,295 :: 		blue=blue1;
0x0371	0x0859      	MOVF       FARG_fadeEffect_blue1, 0
0x0372	0x00C1      	MOVWF      _blue
;MLK_RGB_Controller.c,296 :: 		}
L_fadeEffect84:
;MLK_RGB_Controller.c,297 :: 		if(brilho>0){
0x0373	0x1283      	BCF        STATUS, 5
0x0374	0x0853      	MOVF       _brilho, 0
0x0375	0x3C00      	SUBLW      0
0x0376	0x1803      	BTFSC      STATUS, 0
0x0377	0x2B8B      	GOTO       L_fadeEffect85
;MLK_RGB_Controller.c,298 :: 		brilho-=brilhopasso;
0x0378	0x082B      	MOVF       _brilhopasso, 0
0x0379	0x0253      	SUBWF      _brilho, 0
0x037A	0x00F1      	MOVWF      R1
0x037B	0x0871      	MOVF       R1, 0
0x037C	0x00D3      	MOVWF      _brilho
;MLK_RGB_Controller.c,299 :: 		if(brilho>100){brilho=0;}
0x037D	0x0871      	MOVF       R1, 0
0x037E	0x3C64      	SUBLW      100
0x037F	0x1803      	BTFSC      STATUS, 0
0x0380	0x2B82      	GOTO       L_fadeEffect86
0x0381	0x01D3      	CLRF       _brilho
L_fadeEffect86:
;MLK_RGB_Controller.c,300 :: 		delay_ms(25);
0x0382	0x30A3      	MOVLW      163
0x0383	0x00FC      	MOVWF      R12
0x0384	0x3055      	MOVLW      85
0x0385	0x00FD      	MOVWF      R13
L_fadeEffect87:
0x0386	0x0BFD      	DECFSZ     R13, 1
0x0387	0x2B86      	GOTO       L_fadeEffect87
0x0388	0x0BFC      	DECFSZ     R12, 1
0x0389	0x2B86      	GOTO       L_fadeEffect87
;MLK_RGB_Controller.c,301 :: 		}
0x038A	0x2B9B      	GOTO       L_fadeEffect88
L_fadeEffect85:
;MLK_RGB_Controller.c,302 :: 		else{delay_ms(125);contador=0;}//mudanca
0x038B	0x3004      	MOVLW      4
0x038C	0x00FB      	MOVWF      R11
0x038D	0x302C      	MOVLW      44
0x038E	0x00FC      	MOVWF      R12
0x038F	0x30AB      	MOVLW      171
0x0390	0x00FD      	MOVWF      R13
L_fadeEffect89:
0x0391	0x0BFD      	DECFSZ     R13, 1
0x0392	0x2B91      	GOTO       L_fadeEffect89
0x0393	0x0BFC      	DECFSZ     R12, 1
0x0394	0x2B91      	GOTO       L_fadeEffect89
0x0395	0x0BFB      	DECFSZ     R11, 1
0x0396	0x2B91      	GOTO       L_fadeEffect89
0x0397	0x0000      	NOP
0x0398	0x0000      	NOP
0x0399	0x1683      	BSF        STATUS, 5
0x039A	0x1349      	BCF        _contador, BitPos(_contador+0)
L_fadeEffect88:
;MLK_RGB_Controller.c,303 :: 		}
L_fadeEffect81:
0x039B	0x1683      	BSF        STATUS, 5
;MLK_RGB_Controller.c,304 :: 		if(contador==0&&brilho<brilhoaux){
0x039C	0x1B49      	BTFSC      _contador, BitPos(_contador+0)
0x039D	0x2BAE      	GOTO       L_fadeEffect92
0x039E	0x1283      	BCF        STATUS, 5
0x039F	0x0849      	MOVF       _brilhoaux, 0
0x03A0	0x0253      	SUBWF      _brilho, 0
0x03A1	0x1803      	BTFSC      STATUS, 0
0x03A2	0x2BAE      	GOTO       L_fadeEffect92
L__fadeEffect138:
;MLK_RGB_Controller.c,305 :: 		brilho+=brilhopasso;
0x03A3	0x082B      	MOVF       _brilhopasso, 0
0x03A4	0x07D3      	ADDWF      _brilho, 1
;MLK_RGB_Controller.c,306 :: 		delay_ms(25);
0x03A5	0x30A3      	MOVLW      163
0x03A6	0x00FC      	MOVWF      R12
0x03A7	0x3055      	MOVLW      85
0x03A8	0x00FD      	MOVWF      R13
L_fadeEffect93:
0x03A9	0x0BFD      	DECFSZ     R13, 1
0x03AA	0x2BA9      	GOTO       L_fadeEffect93
0x03AB	0x0BFC      	DECFSZ     R12, 1
0x03AC	0x2BA9      	GOTO       L_fadeEffect93
;MLK_RGB_Controller.c,307 :: 		}
0x03AD	0x2BB0      	GOTO       L_fadeEffect94
L_fadeEffect92:
;MLK_RGB_Controller.c,308 :: 		else{contador=1;} //mudanca
0x03AE	0x1683      	BSF        STATUS, 5
0x03AF	0x1749      	BSF        _contador, BitPos(_contador+0)
L_fadeEffect94:
;MLK_RGB_Controller.c,309 :: 		}
L_end_fadeEffect:
0x03B0	0x0008      	RETURN
; end of _fadeEffect
_atualizaAux:
;MLK_RGB_Controller.c,311 :: 		char atualizaAux(int index, char aux, char max, char min){
;MLK_RGB_Controller.c,312 :: 		if(f2bt==1){
0x03B1	0x1683      	BSF        STATUS, 5
0x03B2	0x1303      	BCF        STATUS, 6
0x03B3	0x1CC9      	BTFSS      _f2bt, BitPos(_f2bt+0)
0x03B4	0x2BC6      	GOTO       L_atualizaAux95
;MLK_RGB_Controller.c,313 :: 		f2bt=0;
0x03B5	0x10C9      	BCF        _f2bt, BitPos(_f2bt+0)
;MLK_RGB_Controller.c,314 :: 		menuIndex=index;
0x03B6	0x0857      	MOVF       FARG_atualizaAux_index, 0
0x03B7	0x00BF      	MOVWF      _menuIndex
;MLK_RGB_Controller.c,315 :: 		delay_ms(50);
0x03B8	0x3002      	MOVLW      2
0x03B9	0x00FB      	MOVWF      R11
0x03BA	0x3045      	MOVLW      69
0x03BB	0x00FC      	MOVWF      R12
0x03BC	0x30A9      	MOVLW      169
0x03BD	0x00FD      	MOVWF      R13
L_atualizaAux96:
0x03BE	0x0BFD      	DECFSZ     R13, 1
0x03BF	0x2BBE      	GOTO       L_atualizaAux96
0x03C0	0x0BFC      	DECFSZ     R12, 1
0x03C1	0x2BBE      	GOTO       L_atualizaAux96
0x03C2	0x0BFB      	DECFSZ     R11, 1
0x03C3	0x2BBE      	GOTO       L_atualizaAux96
0x03C4	0x0000      	NOP
0x03C5	0x0000      	NOP
;MLK_RGB_Controller.c,316 :: 		}
L_atualizaAux95:
;MLK_RGB_Controller.c,317 :: 		if(Button(&PORTA,4,1,1)&&aux<max){
0x03C6	0x3005      	MOVLW      PORTA
0x03C7	0x00DC      	MOVWF      FARG_Button_port
0x03C8	0x3004      	MOVLW      4
0x03C9	0x00DD      	MOVWF      FARG_Button_pin
0x03CA	0x3001      	MOVLW      1
0x03CB	0x00DE      	MOVWF      FARG_Button_time_ms
0x03CC	0x3001      	MOVLW      1
0x03CD	0x00DF      	MOVWF      FARG_Button_active_state
0x03CE	0x21B6      	CALL       _Button
0x03CF	0x0870      	MOVF       R0, 0
0x03D0	0x1903      	BTFSC      STATUS, 2
0x03D1	0x2BF0      	GOTO       L_atualizaAux99
0x03D2	0x085A      	MOVF       FARG_atualizaAux_max, 0
0x03D3	0x0259      	SUBWF      FARG_atualizaAux_aux, 0
0x03D4	0x1803      	BTFSC      STATUS, 0
0x03D5	0x2BF0      	GOTO       L_atualizaAux99
L__atualizaAux143:
;MLK_RGB_Controller.c,318 :: 		fbt4p=0;
0x03D6	0x12C9      	BCF        _fbt4p, BitPos(_fbt4p+0)
;MLK_RGB_Controller.c,319 :: 		if(timer4>5&&aux<max-5){aux+=5;}
0x03D7	0x082A      	MOVF       _timer4, 0
0x03D8	0x3C05      	SUBLW      5
0x03D9	0x1803      	BTFSC      STATUS, 0
0x03DA	0x2BEF      	GOTO       L_atualizaAux102
0x03DB	0x3005      	MOVLW      5
0x03DC	0x025A      	SUBWF      FARG_atualizaAux_max, 0
0x03DD	0x00F1      	MOVWF      R1
0x03DE	0x01F2      	CLRF       R1+1
0x03DF	0x1C03      	BTFSS      STATUS, 0
0x03E0	0x03F2      	DECF       R1+1, 1
0x03E1	0x3080      	MOVLW      128
0x03E2	0x00F0      	MOVWF      R0
0x03E3	0x3080      	MOVLW      128
0x03E4	0x0672      	XORWF      R1+1, 0
0x03E5	0x0270      	SUBWF      R0, 0
0x03E6	0x1D03      	BTFSS      STATUS, 2
0x03E7	0x2BEA      	GOTO       L__atualizaAux151
0x03E8	0x0871      	MOVF       R1, 0
0x03E9	0x0259      	SUBWF      FARG_atualizaAux_aux, 0
L__atualizaAux151:
0x03EA	0x1803      	BTFSC      STATUS, 0
0x03EB	0x2BEF      	GOTO       L_atualizaAux102
L__atualizaAux142:
0x03EC	0x3005      	MOVLW      5
0x03ED	0x07D9      	ADDWF      FARG_atualizaAux_aux, 1
0x03EE	0x2BF0      	GOTO       L_atualizaAux103
L_atualizaAux102:
;MLK_RGB_Controller.c,320 :: 		else{aux++;}
0x03EF	0x0AD9      	INCF       FARG_atualizaAux_aux, 1
L_atualizaAux103:
;MLK_RGB_Controller.c,321 :: 		}
L_atualizaAux99:
;MLK_RGB_Controller.c,322 :: 		if(Button(&PORTA,5,1,1)&&aux>min){
0x03F0	0x3005      	MOVLW      PORTA
0x03F1	0x00DC      	MOVWF      FARG_Button_port
0x03F2	0x3005      	MOVLW      5
0x03F3	0x00DD      	MOVWF      FARG_Button_pin
0x03F4	0x3001      	MOVLW      1
0x03F5	0x00DE      	MOVWF      FARG_Button_time_ms
0x03F6	0x3001      	MOVLW      1
0x03F7	0x00DF      	MOVWF      FARG_Button_active_state
0x03F8	0x21B6      	CALL       _Button
0x03F9	0x0870      	MOVF       R0, 0
0x03FA	0x1903      	BTFSC      STATUS, 2
0x03FB	0x2C0D      	GOTO       L_atualizaAux106
0x03FC	0x0859      	MOVF       FARG_atualizaAux_aux, 0
0x03FD	0x025B      	SUBWF      FARG_atualizaAux_min, 0
0x03FE	0x1803      	BTFSC      STATUS, 0
0x03FF	0x2C0D      	GOTO       L_atualizaAux106
L__atualizaAux141:
;MLK_RGB_Controller.c,323 :: 		fbt5p=0;
0x0400	0x1249      	BCF        _fbt5p, BitPos(_fbt5p+0)
;MLK_RGB_Controller.c,324 :: 		if(timer5>5&&aux>5){aux-=5;}
0x0401	0x0828      	MOVF       _timer5, 0
0x0402	0x3C05      	SUBLW      5
0x0403	0x1803      	BTFSC      STATUS, 0
0x0404	0x2C0C      	GOTO       L_atualizaAux109
0x0405	0x0859      	MOVF       FARG_atualizaAux_aux, 0
0x0406	0x3C05      	SUBLW      5
0x0407	0x1803      	BTFSC      STATUS, 0
0x0408	0x2C0C      	GOTO       L_atualizaAux109
L__atualizaAux140:
0x0409	0x3005      	MOVLW      5
0x040A	0x02D9      	SUBWF      FARG_atualizaAux_aux, 1
0x040B	0x2C0D      	GOTO       L_atualizaAux110
L_atualizaAux109:
;MLK_RGB_Controller.c,325 :: 		else{aux--;}
0x040C	0x03D9      	DECF       FARG_atualizaAux_aux, 1
L_atualizaAux110:
;MLK_RGB_Controller.c,326 :: 		}
L_atualizaAux106:
;MLK_RGB_Controller.c,327 :: 		inttostr(aux,auxSTR);
0x040D	0x0859      	MOVF       FARG_atualizaAux_aux, 0
0x040E	0x00DC      	MOVWF      FARG_IntToStr_input
0x040F	0x01DD      	CLRF       FARG_IntToStr_input+1
0x0410	0x30C2      	MOVLW      _auxSTR
0x0411	0x00DE      	MOVWF      FARG_IntToStr_output
0x0412	0x21F0      	CALL       _IntToStr
;MLK_RGB_Controller.c,328 :: 		lcd_out(2,1,auxSTR);
0x0413	0x3002      	MOVLW      2
0x0414	0x00DC      	MOVWF      FARG_Lcd_Out_row
0x0415	0x3001      	MOVLW      1
0x0416	0x00DD      	MOVWF      FARG_Lcd_Out_column
0x0417	0x30C2      	MOVLW      _auxSTR
0x0418	0x00DE      	MOVWF      FARG_Lcd_Out_text
0x0419	0x225A      	CALL       _Lcd_Out
;MLK_RGB_Controller.c,329 :: 		return aux;
0x041A	0x0859      	MOVF       FARG_atualizaAux_aux, 0
0x041B	0x00F0      	MOVWF      R0
;MLK_RGB_Controller.c,330 :: 		}
L_end_atualizaAux:
0x041C	0x0008      	RETURN
; end of _atualizaAux
_cicloEffect:
;MLK_RGB_Controller.c,260 :: 		void cicloEffect(char speedint,char max){
;MLK_RGB_Controller.c,261 :: 		switch(ciclo){
0x041D	0x2C65      	GOTO       L_cicloEffect67
;MLK_RGB_Controller.c,262 :: 		case 0:
L_cicloEffect69:
;MLK_RGB_Controller.c,263 :: 		green+=speedint;
0x041E	0x1683      	BSF        STATUS, 5
0x041F	0x1303      	BCF        STATUS, 6
0x0420	0x0857      	MOVF       FARG_cicloEffect_speedint, 0
0x0421	0x0739      	ADDWF      _green, 0
0x0422	0x00F1      	MOVWF      R1
0x0423	0x0871      	MOVF       R1, 0
0x0424	0x00B9      	MOVWF      _green
;MLK_RGB_Controller.c,264 :: 		if(green>=max){ciclo++;}
0x0425	0x0858      	MOVF       FARG_cicloEffect_max, 0
0x0426	0x0271      	SUBWF      R1, 0
0x0427	0x1C03      	BTFSS      STATUS, 0
0x0428	0x2C2A      	GOTO       L_cicloEffect70
0x0429	0x0AA9      	INCF       _ciclo, 1
L_cicloEffect70:
;MLK_RGB_Controller.c,265 :: 		break;
0x042A	0x2C7F      	GOTO       L_cicloEffect68
;MLK_RGB_Controller.c,266 :: 		case 1:
L_cicloEffect71:
;MLK_RGB_Controller.c,267 :: 		red-=speedint;
0x042B	0x0857      	MOVF       FARG_cicloEffect_speedint, 0
0x042C	0x022D      	SUBWF      _red, 0
0x042D	0x00F1      	MOVWF      R1
0x042E	0x0871      	MOVF       R1, 0
0x042F	0x00AD      	MOVWF      _red
;MLK_RGB_Controller.c,268 :: 		if(red<=speedint){ciclo++;red=0;}
0x0430	0x0871      	MOVF       R1, 0
0x0431	0x0257      	SUBWF      FARG_cicloEffect_speedint, 0
0x0432	0x1C03      	BTFSS      STATUS, 0
0x0433	0x2C36      	GOTO       L_cicloEffect72
0x0434	0x0AA9      	INCF       _ciclo, 1
0x0435	0x01AD      	CLRF       _red
L_cicloEffect72:
;MLK_RGB_Controller.c,269 :: 		break;
0x0436	0x2C7F      	GOTO       L_cicloEffect68
;MLK_RGB_Controller.c,270 :: 		case 2:
L_cicloEffect73:
;MLK_RGB_Controller.c,271 :: 		blue+=speedint;
0x0437	0x0857      	MOVF       FARG_cicloEffect_speedint, 0
0x0438	0x0741      	ADDWF      _blue, 0
0x0439	0x00F1      	MOVWF      R1
0x043A	0x0871      	MOVF       R1, 0
0x043B	0x00C1      	MOVWF      _blue
;MLK_RGB_Controller.c,272 :: 		if(blue>=max){ciclo++;}
0x043C	0x0858      	MOVF       FARG_cicloEffect_max, 0
0x043D	0x0271      	SUBWF      R1, 0
0x043E	0x1C03      	BTFSS      STATUS, 0
0x043F	0x2C41      	GOTO       L_cicloEffect74
0x0440	0x0AA9      	INCF       _ciclo, 1
L_cicloEffect74:
;MLK_RGB_Controller.c,273 :: 		break;
0x0441	0x2C7F      	GOTO       L_cicloEffect68
;MLK_RGB_Controller.c,274 :: 		case 3:
L_cicloEffect75:
;MLK_RGB_Controller.c,275 :: 		green-=speedint;
0x0442	0x0857      	MOVF       FARG_cicloEffect_speedint, 0
0x0443	0x0239      	SUBWF      _green, 0
0x0444	0x00F1      	MOVWF      R1
0x0445	0x0871      	MOVF       R1, 0
0x0446	0x00B9      	MOVWF      _green
;MLK_RGB_Controller.c,276 :: 		if(green<=speedint){ciclo++;green=0;}
0x0447	0x0871      	MOVF       R1, 0
0x0448	0x0257      	SUBWF      FARG_cicloEffect_speedint, 0
0x0449	0x1C03      	BTFSS      STATUS, 0
0x044A	0x2C4D      	GOTO       L_cicloEffect76
0x044B	0x0AA9      	INCF       _ciclo, 1
0x044C	0x01B9      	CLRF       _green
L_cicloEffect76:
;MLK_RGB_Controller.c,277 :: 		break;
0x044D	0x2C7F      	GOTO       L_cicloEffect68
;MLK_RGB_Controller.c,278 :: 		case 4:
L_cicloEffect77:
;MLK_RGB_Controller.c,279 :: 		red+=speedint;
0x044E	0x0857      	MOVF       FARG_cicloEffect_speedint, 0
0x044F	0x072D      	ADDWF      _red, 0
0x0450	0x00F1      	MOVWF      R1
0x0451	0x0871      	MOVF       R1, 0
0x0452	0x00AD      	MOVWF      _red
;MLK_RGB_Controller.c,280 :: 		if(red>=max){ciclo++;}
0x0453	0x0858      	MOVF       FARG_cicloEffect_max, 0
0x0454	0x0271      	SUBWF      R1, 0
0x0455	0x1C03      	BTFSS      STATUS, 0
0x0456	0x2C58      	GOTO       L_cicloEffect78
0x0457	0x0AA9      	INCF       _ciclo, 1
L_cicloEffect78:
;MLK_RGB_Controller.c,281 :: 		break;
0x0458	0x2C7F      	GOTO       L_cicloEffect68
;MLK_RGB_Controller.c,282 :: 		case 5:
L_cicloEffect79:
;MLK_RGB_Controller.c,283 :: 		blue-=speedint;
0x0459	0x0857      	MOVF       FARG_cicloEffect_speedint, 0
0x045A	0x0241      	SUBWF      _blue, 0
0x045B	0x00F1      	MOVWF      R1
0x045C	0x0871      	MOVF       R1, 0
0x045D	0x00C1      	MOVWF      _blue
;MLK_RGB_Controller.c,284 :: 		if(blue<=speedint){ciclo=0;blue=0;}
0x045E	0x0871      	MOVF       R1, 0
0x045F	0x0257      	SUBWF      FARG_cicloEffect_speedint, 0
0x0460	0x1C03      	BTFSS      STATUS, 0
0x0461	0x2C64      	GOTO       L_cicloEffect80
0x0462	0x01A9      	CLRF       _ciclo
0x0463	0x01C1      	CLRF       _blue
L_cicloEffect80:
;MLK_RGB_Controller.c,285 :: 		break;
0x0464	0x2C7F      	GOTO       L_cicloEffect68
;MLK_RGB_Controller.c,286 :: 		}
L_cicloEffect67:
0x0465	0x1683      	BSF        STATUS, 5
0x0466	0x1303      	BCF        STATUS, 6
0x0467	0x0829      	MOVF       _ciclo, 0
0x0468	0x3A00      	XORLW      0
0x0469	0x1903      	BTFSC      STATUS, 2
0x046A	0x2C1E      	GOTO       L_cicloEffect69
0x046B	0x0829      	MOVF       _ciclo, 0
0x046C	0x3A01      	XORLW      1
0x046D	0x1903      	BTFSC      STATUS, 2
0x046E	0x2C2B      	GOTO       L_cicloEffect71
0x046F	0x0829      	MOVF       _ciclo, 0
0x0470	0x3A02      	XORLW      2
0x0471	0x1903      	BTFSC      STATUS, 2
0x0472	0x2C37      	GOTO       L_cicloEffect73
0x0473	0x0829      	MOVF       _ciclo, 0
0x0474	0x3A03      	XORLW      3
0x0475	0x1903      	BTFSC      STATUS, 2
0x0476	0x2C42      	GOTO       L_cicloEffect75
0x0477	0x0829      	MOVF       _ciclo, 0
0x0478	0x3A04      	XORLW      4
0x0479	0x1903      	BTFSC      STATUS, 2
0x047A	0x2C4E      	GOTO       L_cicloEffect77
0x047B	0x0829      	MOVF       _ciclo, 0
0x047C	0x3A05      	XORLW      5
0x047D	0x1903      	BTFSC      STATUS, 2
0x047E	0x2C59      	GOTO       L_cicloEffect79
L_cicloEffect68:
;MLK_RGB_Controller.c,287 :: 		}
L_end_cicloEffect:
0x047F	0x0008      	RETURN
; end of _cicloEffect
_printRGB:
;MLK_RGB_Controller.c,340 :: 		void printRGB(){
;MLK_RGB_Controller.c,342 :: 		inttostr(blue,auxSTR);
0x0480	0x1683      	BSF        STATUS, 5
0x0481	0x1303      	BCF        STATUS, 6
0x0482	0x0841      	MOVF       _blue, 0
0x0483	0x00DC      	MOVWF      FARG_IntToStr_input
0x0484	0x01DD      	CLRF       FARG_IntToStr_input+1
0x0485	0x30C2      	MOVLW      _auxSTR
0x0486	0x00DE      	MOVWF      FARG_IntToStr_output
0x0487	0x21F0      	CALL       _IntToStr
;MLK_RGB_Controller.c,343 :: 		lcd_out(2,11,auxSTR);
0x0488	0x3002      	MOVLW      2
0x0489	0x00DC      	MOVWF      FARG_Lcd_Out_row
0x048A	0x300B      	MOVLW      11
0x048B	0x00DD      	MOVWF      FARG_Lcd_Out_column
0x048C	0x30C2      	MOVLW      _auxSTR
0x048D	0x00DE      	MOVWF      FARG_Lcd_Out_text
0x048E	0x225A      	CALL       _Lcd_Out
;MLK_RGB_Controller.c,344 :: 		inttostr(green,auxSTR);
0x048F	0x0839      	MOVF       _green, 0
0x0490	0x00DC      	MOVWF      FARG_IntToStr_input
0x0491	0x01DD      	CLRF       FARG_IntToStr_input+1
0x0492	0x30C2      	MOVLW      _auxSTR
0x0493	0x00DE      	MOVWF      FARG_IntToStr_output
0x0494	0x21F0      	CALL       _IntToStr
;MLK_RGB_Controller.c,345 :: 		lcd_out(2,7,auxSTR);
0x0495	0x3002      	MOVLW      2
0x0496	0x00DC      	MOVWF      FARG_Lcd_Out_row
0x0497	0x3007      	MOVLW      7
0x0498	0x00DD      	MOVWF      FARG_Lcd_Out_column
0x0499	0x30C2      	MOVLW      _auxSTR
0x049A	0x00DE      	MOVWF      FARG_Lcd_Out_text
0x049B	0x225A      	CALL       _Lcd_Out
;MLK_RGB_Controller.c,346 :: 		inttostr(red,auxSTR);
0x049C	0x082D      	MOVF       _red, 0
0x049D	0x00DC      	MOVWF      FARG_IntToStr_input
0x049E	0x01DD      	CLRF       FARG_IntToStr_input+1
0x049F	0x30C2      	MOVLW      _auxSTR
0x04A0	0x00DE      	MOVWF      FARG_IntToStr_output
0x04A1	0x21F0      	CALL       _IntToStr
;MLK_RGB_Controller.c,347 :: 		lcd_out(2,3,auxSTR);
0x04A2	0x3002      	MOVLW      2
0x04A3	0x00DC      	MOVWF      FARG_Lcd_Out_row
0x04A4	0x3003      	MOVLW      3
0x04A5	0x00DD      	MOVWF      FARG_Lcd_Out_column
0x04A6	0x30C2      	MOVLW      _auxSTR
0x04A7	0x00DE      	MOVWF      FARG_Lcd_Out_text
0x04A8	0x225A      	CALL       _Lcd_Out
;MLK_RGB_Controller.c,348 :: 		lcd_out(2,1,"RGB:");
0x04A9	0x3002      	MOVLW      2
0x04AA	0x00DC      	MOVWF      FARG_Lcd_Out_row
0x04AB	0x3001      	MOVLW      1
0x04AC	0x00DD      	MOVWF      FARG_Lcd_Out_column
0x04AD	0x30BA      	MOVLW      ?lstr2_MLK_RGB_Controller
0x04AE	0x00DE      	MOVWF      FARG_Lcd_Out_text
0x04AF	0x225A      	CALL       _Lcd_Out
;MLK_RGB_Controller.c,349 :: 		}
L_end_printRGB:
0x04B0	0x0008      	RETURN
; end of _printRGB
_functionButton:
;MLK_RGB_Controller.c,224 :: 		void functionButton(){
;MLK_RGB_Controller.c,225 :: 		if(menuPrinc==1){
0x04B1	0x1683      	BSF        STATUS, 5
0x04B2	0x1303      	BCF        STATUS, 6
0x04B3	0x1C53      	BTFSS      _menuPrinc, BitPos(_menuPrinc+0)
0x04B4	0x2CFD      	GOTO       L_functionButton46
;MLK_RGB_Controller.c,226 :: 		if(fbt4p==1){
0x04B5	0x1EC9      	BTFSS      _fbt4p, BitPos(_fbt4p+0)
0x04B6	0x2CB9      	GOTO       L_functionButton47
;MLK_RGB_Controller.c,227 :: 		fbt4p=0;
0x04B7	0x12C9      	BCF        _fbt4p, BitPos(_fbt4p+0)
;MLK_RGB_Controller.c,228 :: 		menuIndex++;
0x04B8	0x0ABF      	INCF       _menuIndex, 1
;MLK_RGB_Controller.c,229 :: 		}
L_functionButton47:
;MLK_RGB_Controller.c,230 :: 		if(fbt5p==1){
0x04B9	0x1E49      	BTFSS      _fbt5p, BitPos(_fbt5p+0)
0x04BA	0x2CBD      	GOTO       L_functionButton48
;MLK_RGB_Controller.c,231 :: 		fbt5p=0;
0x04BB	0x1249      	BCF        _fbt5p, BitPos(_fbt5p+0)
;MLK_RGB_Controller.c,232 :: 		menuIndex--;
0x04BC	0x03BF      	DECF       _menuIndex, 1
;MLK_RGB_Controller.c,233 :: 		}
L_functionButton48:
;MLK_RGB_Controller.c,234 :: 		if(menuIndex==4){
0x04BD	0x083F      	MOVF       _menuIndex, 0
0x04BE	0x3A04      	XORLW      4
0x04BF	0x1D03      	BTFSS      STATUS, 2
0x04C0	0x2CC2      	GOTO       L_functionButton49
;MLK_RGB_Controller.c,235 :: 		menuIndex=0;
0x04C1	0x01BF      	CLRF       _menuIndex
;MLK_RGB_Controller.c,236 :: 		}
L_functionButton49:
;MLK_RGB_Controller.c,237 :: 		if(menuIndex==255){
0x04C2	0x083F      	MOVF       _menuIndex, 0
0x04C3	0x3AFF      	XORLW      255
0x04C4	0x1D03      	BTFSS      STATUS, 2
0x04C5	0x2CC8      	GOTO       L_functionButton50
;MLK_RGB_Controller.c,238 :: 		menuIndex=3;
0x04C6	0x3003      	MOVLW      3
0x04C7	0x00BF      	MOVWF      _menuIndex
;MLK_RGB_Controller.c,239 :: 		}
L_functionButton50:
;MLK_RGB_Controller.c,240 :: 		if(fbt5h==1&&menuindex!=0){
0x04C8	0x1FC9      	BTFSS      _fbt5h, BitPos(_fbt5h+0)
0x04C9	0x2CD1      	GOTO       L_functionButton53
0x04CA	0x083F      	MOVF       _menuIndex, 0
0x04CB	0x3A00      	XORLW      0
0x04CC	0x1903      	BTFSC      STATUS, 2
0x04CD	0x2CD1      	GOTO       L_functionButton53
L__functionButton137:
;MLK_RGB_Controller.c,241 :: 		fbt5h=0;
0x04CE	0x13C9      	BCF        _fbt5h, BitPos(_fbt5h+0)
;MLK_RGB_Controller.c,242 :: 		menuIndex=5;
0x04CF	0x3005      	MOVLW      5
0x04D0	0x00BF      	MOVWF      _menuIndex
;MLK_RGB_Controller.c,243 :: 		}
L_functionButton53:
;MLK_RGB_Controller.c,244 :: 		if(fbt4h==1&&(menuIndex==1||(menuindex==2&&fcor==1))){
0x04D1	0x1D49      	BTFSS      _fbt4h, BitPos(_fbt4h+0)
0x04D2	0x2CE2      	GOTO       L_functionButton60
0x04D3	0x083F      	MOVF       _menuIndex, 0
0x04D4	0x3A01      	XORLW      1
0x04D5	0x1903      	BTFSC      STATUS, 2
0x04D6	0x2CDF      	GOTO       L__functionButton135
0x04D7	0x083F      	MOVF       _menuIndex, 0
0x04D8	0x3A02      	XORLW      2
0x04D9	0x1D03      	BTFSS      STATUS, 2
0x04DA	0x2CDE      	GOTO       L__functionButton136
0x04DB	0x1C49      	BTFSS      _fcor, BitPos(_fcor+0)
0x04DC	0x2CDE      	GOTO       L__functionButton136
0x04DD	0x2CDF      	GOTO       L__functionButton135
L__functionButton136:
0x04DE	0x2CE2      	GOTO       L_functionButton60
L__functionButton135:
L__functionButton134:
;MLK_RGB_Controller.c,245 :: 		fbt4h=0;
0x04DF	0x1149      	BCF        _fbt4h, BitPos(_fbt4h+0)
;MLK_RGB_Controller.c,246 :: 		menuIndex=6;
0x04E0	0x3006      	MOVLW      6
0x04E1	0x00BF      	MOVWF      _menuIndex
;MLK_RGB_Controller.c,247 :: 		}
L_functionButton60:
;MLK_RGB_Controller.c,248 :: 		if(fcor==0 && f2bt==1 &&(menuIndex==2)){
0x04E2	0x1849      	BTFSC      _fcor, BitPos(_fcor+0)
0x04E3	0x2CEC      	GOTO       L_functionButton63
0x04E4	0x1CC9      	BTFSS      _f2bt, BitPos(_f2bt+0)
0x04E5	0x2CEC      	GOTO       L_functionButton63
0x04E6	0x083F      	MOVF       _menuIndex, 0
0x04E7	0x3A02      	XORLW      2
0x04E8	0x1D03      	BTFSS      STATUS, 2
0x04E9	0x2CEC      	GOTO       L_functionButton63
L__functionButton133:
;MLK_RGB_Controller.c,249 :: 		f2bt=0;
0x04EA	0x10C9      	BCF        _f2bt, BitPos(_f2bt+0)
;MLK_RGB_Controller.c,250 :: 		fcor=1;
0x04EB	0x1449      	BSF        _fcor, BitPos(_fcor+0)
;MLK_RGB_Controller.c,251 :: 		}
L_functionButton63:
;MLK_RGB_Controller.c,252 :: 		if(fcor==1 && f2bt==1 && (menuIndex==2)){
0x04EC	0x1C49      	BTFSS      _fcor, BitPos(_fcor+0)
0x04ED	0x2CFD      	GOTO       L_functionButton66
0x04EE	0x1CC9      	BTFSS      _f2bt, BitPos(_f2bt+0)
0x04EF	0x2CFD      	GOTO       L_functionButton66
0x04F0	0x083F      	MOVF       _menuIndex, 0
0x04F1	0x3A02      	XORLW      2
0x04F2	0x1D03      	BTFSS      STATUS, 2
0x04F3	0x2CFD      	GOTO       L_functionButton66
L__functionButton132:
;MLK_RGB_Controller.c,253 :: 		f2bt=0;
0x04F4	0x10C9      	BCF        _f2bt, BitPos(_f2bt+0)
;MLK_RGB_Controller.c,254 :: 		fcor=0;
0x04F5	0x1049      	BCF        _fcor, BitPos(_fcor+0)
;MLK_RGB_Controller.c,255 :: 		lcd_out(1,16," ");
0x04F6	0x3001      	MOVLW      1
0x04F7	0x00DC      	MOVWF      FARG_Lcd_Out_row
0x04F8	0x3010      	MOVLW      16
0x04F9	0x00DD      	MOVWF      FARG_Lcd_Out_column
0x04FA	0x30AB      	MOVLW      ?lstr1_MLK_RGB_Controller
0x04FB	0x00DE      	MOVWF      FARG_Lcd_Out_text
0x04FC	0x225A      	CALL       _Lcd_Out
;MLK_RGB_Controller.c,256 :: 		}
L_functionButton66:
;MLK_RGB_Controller.c,257 :: 		}
L_functionButton46:
;MLK_RGB_Controller.c,258 :: 		}
L_end_functionButton:
0x04FD	0x0008      	RETURN
; end of _functionButton
_ajustaBrilho:
;MLK_RGB_Controller.c,332 :: 		void ajustaBrilho(){
;MLK_RGB_Controller.c,333 :: 		if(menuindex!=0){
0x04FE	0x1683      	BSF        STATUS, 5
0x04FF	0x1303      	BCF        STATUS, 6
0x0500	0x083F      	MOVF       _menuIndex, 0
0x0501	0x3A00      	XORLW      0
0x0502	0x1903      	BTFSC      STATUS, 2
0x0503	0x2D2B      	GOTO       L_ajustaBrilho111
;MLK_RGB_Controller.c,334 :: 		ciclo1=(red*brilho/255);
0x0504	0x082D      	MOVF       _red, 0
0x0505	0x00F0      	MOVWF      R0
0x0506	0x1283      	BCF        STATUS, 5
0x0507	0x0853      	MOVF       _brilho, 0
0x0508	0x00F4      	MOVWF      R4
0x0509	0x22C7      	CALL       _Mul_8X8_U
0x050A	0x30FF      	MOVLW      255
0x050B	0x00F4      	MOVWF      R4
0x050C	0x01F5      	CLRF       R4+1
0x050D	0x22F8      	CALL       _Div_16x16_S
0x050E	0x0870      	MOVF       R0, 0
0x050F	0x1683      	BSF        STATUS, 5
0x0510	0x00D1      	MOVWF      _ciclo1
;MLK_RGB_Controller.c,335 :: 		ciclo2=(green*brilho/255);
0x0511	0x0839      	MOVF       _green, 0
0x0512	0x00F0      	MOVWF      R0
0x0513	0x1283      	BCF        STATUS, 5
0x0514	0x0853      	MOVF       _brilho, 0
0x0515	0x00F4      	MOVWF      R4
0x0516	0x22C7      	CALL       _Mul_8X8_U
0x0517	0x30FF      	MOVLW      255
0x0518	0x00F4      	MOVWF      R4
0x0519	0x01F5      	CLRF       R4+1
0x051A	0x22F8      	CALL       _Div_16x16_S
0x051B	0x0870      	MOVF       R0, 0
0x051C	0x1683      	BSF        STATUS, 5
0x051D	0x00CA      	MOVWF      _ciclo2
;MLK_RGB_Controller.c,336 :: 		ciclo3=(blue*brilho/255);
0x051E	0x0841      	MOVF       _blue, 0
0x051F	0x00F0      	MOVWF      R0
0x0520	0x1283      	BCF        STATUS, 5
0x0521	0x0853      	MOVF       _brilho, 0
0x0522	0x00F4      	MOVWF      R4
0x0523	0x22C7      	CALL       _Mul_8X8_U
0x0524	0x30FF      	MOVLW      255
0x0525	0x00F4      	MOVWF      R4
0x0526	0x01F5      	CLRF       R4+1
0x0527	0x22F8      	CALL       _Div_16x16_S
0x0528	0x0870      	MOVF       R0, 0
0x0529	0x1683      	BSF        STATUS, 5
0x052A	0x00CB      	MOVWF      _ciclo3
;MLK_RGB_Controller.c,337 :: 		}
L_ajustaBrilho111:
;MLK_RGB_Controller.c,338 :: 		}
L_end_ajustaBrilho:
0x052B	0x0008      	RETURN
; end of _ajustaBrilho
_controlMenu:
;MLK_RGB_Controller.c,351 :: 		controlMenu(){
;MLK_RGB_Controller.c,352 :: 		if(menuindex!=menuindexant){
0x052C	0x1683      	BSF        STATUS, 5
0x052D	0x1303      	BCF        STATUS, 6
0x052E	0x083F      	MOVF       _menuIndex, 0
0x052F	0x0640      	XORWF      _menuindexant, 0
0x0530	0x1903      	BTFSC      STATUS, 2
0x0531	0x2D38      	GOTO       L_controlMenu112
;MLK_RGB_Controller.c,353 :: 		lcd_cmd(_LCD_CLEAR);
0x0532	0x3001      	MOVLW      1
0x0533	0x00EA      	MOVWF      FARG_Lcd_Cmd_out_char
0x0534	0x20E4      	CALL       _Lcd_Cmd
;MLK_RGB_Controller.c,354 :: 		menuindexant=menuindex;
0x0535	0x1683      	BSF        STATUS, 5
0x0536	0x083F      	MOVF       _menuIndex, 0
0x0537	0x00C0      	MOVWF      _menuindexant
;MLK_RGB_Controller.c,355 :: 		}
L_controlMenu112:
;MLK_RGB_Controller.c,356 :: 		switch(menuIndex){
0x0538	0x2E06      	GOTO       L_controlMenu113
;MLK_RGB_Controller.c,357 :: 		case 0://off
L_controlMenu115:
;MLK_RGB_Controller.c,358 :: 		menuPrinc=1;
0x0539	0x1453      	BSF        _menuPrinc, BitPos(_menuPrinc+0)
;MLK_RGB_Controller.c,359 :: 		lcd_out(1,4,"Desligado!");
0x053A	0x3001      	MOVLW      1
0x053B	0x00DC      	MOVWF      FARG_Lcd_Out_row
0x053C	0x3004      	MOVLW      4
0x053D	0x00DD      	MOVWF      FARG_Lcd_Out_column
0x053E	0x30AE      	MOVLW      ?lstr3_MLK_RGB_Controller
0x053F	0x00DE      	MOVWF      FARG_Lcd_Out_text
0x0540	0x225A      	CALL       _Lcd_Out
;MLK_RGB_Controller.c,360 :: 		ciclo1=0;
0x0541	0x01D1      	CLRF       _ciclo1
;MLK_RGB_Controller.c,361 :: 		ciclo2=0;
0x0542	0x01CA      	CLRF       _ciclo2
;MLK_RGB_Controller.c,362 :: 		ciclo3=0;
0x0543	0x01CB      	CLRF       _ciclo3
;MLK_RGB_Controller.c,363 :: 		break;
0x0544	0x2E2B      	GOTO       L_controlMenu114
;MLK_RGB_Controller.c,364 :: 		case 1://fixo
L_controlMenu116:
;MLK_RGB_Controller.c,365 :: 		brilho=brilhoaux;
0x0545	0x1283      	BCF        STATUS, 5
0x0546	0x0849      	MOVF       _brilhoaux, 0
0x0547	0x00D3      	MOVWF      _brilho
;MLK_RGB_Controller.c,366 :: 		menuPrinc=1;
0x0548	0x1683      	BSF        STATUS, 5
0x0549	0x1453      	BSF        _menuPrinc, BitPos(_menuPrinc+0)
;MLK_RGB_Controller.c,367 :: 		lcd_out(1,5,"Cor fixa");
0x054A	0x3001      	MOVLW      1
0x054B	0x00DC      	MOVWF      FARG_Lcd_Out_row
0x054C	0x3005      	MOVLW      5
0x054D	0x00DD      	MOVWF      FARG_Lcd_Out_column
0x054E	0x304A      	MOVLW      ?lstr4_MLK_RGB_Controller
0x054F	0x00DE      	MOVWF      FARG_Lcd_Out_text
0x0550	0x225A      	CALL       _Lcd_Out
;MLK_RGB_Controller.c,368 :: 		printRGB();
0x0551	0x2480      	CALL       _printRGB
;MLK_RGB_Controller.c,369 :: 		break;
0x0552	0x2E2B      	GOTO       L_controlMenu114
;MLK_RGB_Controller.c,370 :: 		case 3://ciclo
L_controlMenu117:
;MLK_RGB_Controller.c,371 :: 		menuPrinc=1;
0x0553	0x1453      	BSF        _menuPrinc, BitPos(_menuPrinc+0)
;MLK_RGB_Controller.c,373 :: 		brilho=brilhoaux;
0x0554	0x1283      	BCF        STATUS, 5
0x0555	0x0849      	MOVF       _brilhoaux, 0
0x0556	0x00D3      	MOVWF      _brilho
;MLK_RGB_Controller.c,374 :: 		lcd_out(1,1,"Ciclo espectral!");
0x0557	0x3001      	MOVLW      1
0x0558	0x1683      	BSF        STATUS, 5
0x0559	0x00DC      	MOVWF      FARG_Lcd_Out_row
0x055A	0x3001      	MOVLW      1
0x055B	0x00DD      	MOVWF      FARG_Lcd_Out_column
0x055C	0x3054      	MOVLW      ?lstr5_MLK_RGB_Controller
0x055D	0x00DE      	MOVWF      FARG_Lcd_Out_text
0x055E	0x225A      	CALL       _Lcd_Out
;MLK_RGB_Controller.c,375 :: 		printRGB();
0x055F	0x2480      	CALL       _printRGB
;MLK_RGB_Controller.c,376 :: 		cicloEffect(speed,256-speed);
0x0560	0x0820      	MOVF       _speed, 0
0x0561	0x00D7      	MOVWF      FARG_cicloEffect_speedint
0x0562	0x0820      	MOVF       _speed, 0
0x0563	0x3C00      	SUBLW      0
0x0564	0x00D8      	MOVWF      FARG_cicloEffect_max
0x0565	0x241D      	CALL       _cicloEffect
;MLK_RGB_Controller.c,377 :: 		if(fbt4h==1){fbt4h=0;menuindex=9;}
0x0566	0x1D49      	BTFSS      _fbt4h, BitPos(_fbt4h+0)
0x0567	0x2D6B      	GOTO       L_controlMenu118
0x0568	0x1149      	BCF        _fbt4h, BitPos(_fbt4h+0)
0x0569	0x3009      	MOVLW      9
0x056A	0x00BF      	MOVWF      _menuIndex
L_controlMenu118:
;MLK_RGB_Controller.c,378 :: 		break;
0x056B	0x2E2B      	GOTO       L_controlMenu114
;MLK_RGB_Controller.c,379 :: 		case 2://fade
L_controlMenu119:
;MLK_RGB_Controller.c,380 :: 		menuPrinc=1 ;
0x056C	0x1453      	BSF        _menuPrinc, BitPos(_menuPrinc+0)
;MLK_RGB_Controller.c,381 :: 		lcd_out(1,5,"Pulsante");
0x056D	0x3001      	MOVLW      1
0x056E	0x00DC      	MOVWF      FARG_Lcd_Out_row
0x056F	0x3005      	MOVLW      5
0x0570	0x00DD      	MOVWF      FARG_Lcd_Out_column
0x0571	0x3067      	MOVLW      ?lstr6_MLK_RGB_Controller
0x0572	0x00DE      	MOVWF      FARG_Lcd_Out_text
0x0573	0x225A      	CALL       _Lcd_Out
;MLK_RGB_Controller.c,382 :: 		printRGB();
0x0574	0x2480      	CALL       _printRGB
;MLK_RGB_Controller.c,383 :: 		fadeEffect(contadoraux,pwm1_cont,contadoraux2);
0x0575	0x1283      	BCF        STATUS, 5
0x0576	0x0865      	MOVF       _contadoraux, 0
0x0577	0x1683      	BSF        STATUS, 5
0x0578	0x00D7      	MOVWF      FARG_fadeEffect_red1
0x0579	0x1283      	BCF        STATUS, 5
0x057A	0x0866      	MOVF       _pwm1_cont, 0
0x057B	0x1683      	BSF        STATUS, 5
0x057C	0x00D8      	MOVWF      FARG_fadeEffect_green1
0x057D	0x1283      	BCF        STATUS, 5
0x057E	0x082E      	MOVF       _contadoraux2, 0
0x057F	0x1683      	BSF        STATUS, 5
0x0580	0x00D9      	MOVWF      FARG_fadeEffect_blue1
0x0581	0x2361      	CALL       _fadeEffect
;MLK_RGB_Controller.c,384 :: 		if(fcor==1){lcd_out(1,16,"F");}
0x0582	0x1683      	BSF        STATUS, 5
0x0583	0x1303      	BCF        STATUS, 6
0x0584	0x1C49      	BTFSS      _fcor, BitPos(_fcor+0)
0x0585	0x2D8D      	GOTO       L_controlMenu120
0x0586	0x3001      	MOVLW      1
0x0587	0x00DC      	MOVWF      FARG_Lcd_Out_row
0x0588	0x3010      	MOVLW      16
0x0589	0x00DD      	MOVWF      FARG_Lcd_Out_column
0x058A	0x302C      	MOVLW      ?lstr7_MLK_RGB_Controller
0x058B	0x00DE      	MOVWF      FARG_Lcd_Out_text
0x058C	0x225A      	CALL       _Lcd_Out
L_controlMenu120:
;MLK_RGB_Controller.c,385 :: 		break;
0x058D	0x2E2B      	GOTO       L_controlMenu114
;MLK_RGB_Controller.c,386 :: 		case 5://brilho
L_controlMenu121:
;MLK_RGB_Controller.c,387 :: 		menuPrinc=0 ;
0x058E	0x1053      	BCF        _menuPrinc, BitPos(_menuPrinc+0)
;MLK_RGB_Controller.c,388 :: 		lcd_out(1,1,"Brilho:");
0x058F	0x3001      	MOVLW      1
0x0590	0x00DC      	MOVWF      FARG_Lcd_Out_row
0x0591	0x3001      	MOVLW      1
0x0592	0x00DD      	MOVWF      FARG_Lcd_Out_column
0x0593	0x3023      	MOVLW      ?lstr8_MLK_RGB_Controller
0x0594	0x00DE      	MOVWF      FARG_Lcd_Out_text
0x0595	0x225A      	CALL       _Lcd_Out
;MLK_RGB_Controller.c,389 :: 		brilho=atualizaAux(1,brilho,100,0);
0x0596	0x3001      	MOVLW      1
0x0597	0x00D7      	MOVWF      FARG_atualizaAux_index
0x0598	0x3000      	MOVLW      0
0x0599	0x00D8      	MOVWF      FARG_atualizaAux_index+1
0x059A	0x1283      	BCF        STATUS, 5
0x059B	0x0853      	MOVF       _brilho, 0
0x059C	0x1683      	BSF        STATUS, 5
0x059D	0x00D9      	MOVWF      FARG_atualizaAux_aux
0x059E	0x3064      	MOVLW      100
0x059F	0x00DA      	MOVWF      FARG_atualizaAux_max
0x05A0	0x01DB      	CLRF       FARG_atualizaAux_min
0x05A1	0x23B1      	CALL       _atualizaAux
0x05A2	0x0870      	MOVF       R0, 0
0x05A3	0x1283      	BCF        STATUS, 5
0x05A4	0x00D3      	MOVWF      _brilho
;MLK_RGB_Controller.c,390 :: 		brilhoaux=brilho;
0x05A5	0x0870      	MOVF       R0, 0
0x05A6	0x00C9      	MOVWF      _brilhoaux
;MLK_RGB_Controller.c,391 :: 		brilhopasso=(brilho/20)+1;
0x05A7	0x3014      	MOVLW      20
0x05A8	0x00F4      	MOVWF      R4
0x05A9	0x22E0      	CALL       _Div_8X8_U
0x05AA	0x0A70      	INCF       R0, 0
0x05AB	0x00AB      	MOVWF      _brilhopasso
;MLK_RGB_Controller.c,392 :: 		break;
0x05AC	0x2E2B      	GOTO       L_controlMenu114
;MLK_RGB_Controller.c,393 :: 		case 6://red
L_controlMenu122:
;MLK_RGB_Controller.c,394 :: 		menuPrinc=0 ;
0x05AD	0x1683      	BSF        STATUS, 5
0x05AE	0x1053      	BCF        _menuPrinc, BitPos(_menuPrinc+0)
;MLK_RGB_Controller.c,395 :: 		lcd_out(1,1,"Red:");
0x05AF	0x3001      	MOVLW      1
0x05B0	0x00DC      	MOVWF      FARG_Lcd_Out_row
0x05B1	0x3001      	MOVLW      1
0x05B2	0x00DD      	MOVWF      FARG_Lcd_Out_column
0x05B3	0x302F      	MOVLW      ?lstr9_MLK_RGB_Controller
0x05B4	0x00DE      	MOVWF      FARG_Lcd_Out_text
0x05B5	0x225A      	CALL       _Lcd_Out
;MLK_RGB_Controller.c,396 :: 		red=atualizaAux(7,red,255,0);
0x05B6	0x3007      	MOVLW      7
0x05B7	0x00D7      	MOVWF      FARG_atualizaAux_index
0x05B8	0x3000      	MOVLW      0
0x05B9	0x00D8      	MOVWF      FARG_atualizaAux_index+1
0x05BA	0x082D      	MOVF       _red, 0
0x05BB	0x00D9      	MOVWF      FARG_atualizaAux_aux
0x05BC	0x30FF      	MOVLW      255
0x05BD	0x00DA      	MOVWF      FARG_atualizaAux_max
0x05BE	0x01DB      	CLRF       FARG_atualizaAux_min
0x05BF	0x23B1      	CALL       _atualizaAux
0x05C0	0x0870      	MOVF       R0, 0
0x05C1	0x00AD      	MOVWF      _red
;MLK_RGB_Controller.c,397 :: 		break;
0x05C2	0x2E2B      	GOTO       L_controlMenu114
;MLK_RGB_Controller.c,398 :: 		case 7://green
L_controlMenu123:
;MLK_RGB_Controller.c,399 :: 		menuPrinc=0 ;
0x05C3	0x1053      	BCF        _menuPrinc, BitPos(_menuPrinc+0)
;MLK_RGB_Controller.c,400 :: 		lcd_out(1,1,"Green:");
0x05C4	0x3001      	MOVLW      1
0x05C5	0x00DC      	MOVWF      FARG_Lcd_Out_row
0x05C6	0x3001      	MOVLW      1
0x05C7	0x00DD      	MOVWF      FARG_Lcd_Out_column
0x05C8	0x303C      	MOVLW      ?lstr10_MLK_RGB_Controller
0x05C9	0x00DE      	MOVWF      FARG_Lcd_Out_text
0x05CA	0x225A      	CALL       _Lcd_Out
;MLK_RGB_Controller.c,401 :: 		green=atualizaAux(8,green,255,0);
0x05CB	0x3008      	MOVLW      8
0x05CC	0x00D7      	MOVWF      FARG_atualizaAux_index
0x05CD	0x3000      	MOVLW      0
0x05CE	0x00D8      	MOVWF      FARG_atualizaAux_index+1
0x05CF	0x0839      	MOVF       _green, 0
0x05D0	0x00D9      	MOVWF      FARG_atualizaAux_aux
0x05D1	0x30FF      	MOVLW      255
0x05D2	0x00DA      	MOVWF      FARG_atualizaAux_max
0x05D3	0x01DB      	CLRF       FARG_atualizaAux_min
0x05D4	0x23B1      	CALL       _atualizaAux
0x05D5	0x0870      	MOVF       R0, 0
0x05D6	0x00B9      	MOVWF      _green
;MLK_RGB_Controller.c,402 :: 		break;
0x05D7	0x2E2B      	GOTO       L_controlMenu114
;MLK_RGB_Controller.c,403 :: 		case 8://blue
L_controlMenu124:
;MLK_RGB_Controller.c,404 :: 		menuPrinc=0 ;
0x05D8	0x1053      	BCF        _menuPrinc, BitPos(_menuPrinc+0)
;MLK_RGB_Controller.c,405 :: 		lcd_out(1,1,"Blue:");
0x05D9	0x3001      	MOVLW      1
0x05DA	0x00DC      	MOVWF      FARG_Lcd_Out_row
0x05DB	0x3001      	MOVLW      1
0x05DC	0x00DD      	MOVWF      FARG_Lcd_Out_column
0x05DD	0x3043      	MOVLW      ?lstr11_MLK_RGB_Controller
0x05DE	0x00DE      	MOVWF      FARG_Lcd_Out_text
0x05DF	0x225A      	CALL       _Lcd_Out
;MLK_RGB_Controller.c,406 :: 		blue=atualizaAux(1,blue,255,0);
0x05E0	0x3001      	MOVLW      1
0x05E1	0x00D7      	MOVWF      FARG_atualizaAux_index
0x05E2	0x3000      	MOVLW      0
0x05E3	0x00D8      	MOVWF      FARG_atualizaAux_index+1
0x05E4	0x0841      	MOVF       _blue, 0
0x05E5	0x00D9      	MOVWF      FARG_atualizaAux_aux
0x05E6	0x30FF      	MOVLW      255
0x05E7	0x00DA      	MOVWF      FARG_atualizaAux_max
0x05E8	0x01DB      	CLRF       FARG_atualizaAux_min
0x05E9	0x23B1      	CALL       _atualizaAux
0x05EA	0x0870      	MOVF       R0, 0
0x05EB	0x00C1      	MOVWF      _blue
;MLK_RGB_Controller.c,407 :: 		break;
0x05EC	0x2E2B      	GOTO       L_controlMenu114
;MLK_RGB_Controller.c,408 :: 		case 9:
L_controlMenu125:
;MLK_RGB_Controller.c,409 :: 		menuPrinc=0 ;
0x05ED	0x1053      	BCF        _menuPrinc, BitPos(_menuPrinc+0)
;MLK_RGB_Controller.c,410 :: 		lcd_out(1,1,"Speed:");
0x05EE	0x3001      	MOVLW      1
0x05EF	0x00DC      	MOVWF      FARG_Lcd_Out_row
0x05F0	0x3001      	MOVLW      1
0x05F1	0x00DD      	MOVWF      FARG_Lcd_Out_column
0x05F2	0x3035      	MOVLW      ?lstr12_MLK_RGB_Controller
0x05F3	0x00DE      	MOVWF      FARG_Lcd_Out_text
0x05F4	0x225A      	CALL       _Lcd_Out
;MLK_RGB_Controller.c,411 :: 		Speed=atualizaAux(3,Speed,255,1);
0x05F5	0x3003      	MOVLW      3
0x05F6	0x00D7      	MOVWF      FARG_atualizaAux_index
0x05F7	0x3000      	MOVLW      0
0x05F8	0x00D8      	MOVWF      FARG_atualizaAux_index+1
0x05F9	0x0820      	MOVF       _speed, 0
0x05FA	0x00D9      	MOVWF      FARG_atualizaAux_aux
0x05FB	0x30FF      	MOVLW      255
0x05FC	0x00DA      	MOVWF      FARG_atualizaAux_max
0x05FD	0x3001      	MOVLW      1
0x05FE	0x00DB      	MOVWF      FARG_atualizaAux_min
0x05FF	0x23B1      	CALL       _atualizaAux
0x0600	0x0870      	MOVF       R0, 0
0x0601	0x00A0      	MOVWF      _speed
;MLK_RGB_Controller.c,412 :: 		passoSpeed=Speed;
0x0602	0x0870      	MOVF       R0, 0
0x0603	0x1283      	BCF        STATUS, 5
0x0604	0x00B4      	MOVWF      _passoSpeed
;MLK_RGB_Controller.c,413 :: 		break;
0x0605	0x2E2B      	GOTO       L_controlMenu114
;MLK_RGB_Controller.c,414 :: 		}
L_controlMenu113:
0x0606	0x1683      	BSF        STATUS, 5
0x0607	0x083F      	MOVF       _menuIndex, 0
0x0608	0x3A00      	XORLW      0
0x0609	0x1903      	BTFSC      STATUS, 2
0x060A	0x2D39      	GOTO       L_controlMenu115
0x060B	0x083F      	MOVF       _menuIndex, 0
0x060C	0x3A01      	XORLW      1
0x060D	0x1903      	BTFSC      STATUS, 2
0x060E	0x2D45      	GOTO       L_controlMenu116
0x060F	0x083F      	MOVF       _menuIndex, 0
0x0610	0x3A03      	XORLW      3
0x0611	0x1903      	BTFSC      STATUS, 2
0x0612	0x2D53      	GOTO       L_controlMenu117
0x0613	0x083F      	MOVF       _menuIndex, 0
0x0614	0x3A02      	XORLW      2
0x0615	0x1903      	BTFSC      STATUS, 2
0x0616	0x2D6C      	GOTO       L_controlMenu119
0x0617	0x083F      	MOVF       _menuIndex, 0
0x0618	0x3A05      	XORLW      5
0x0619	0x1903      	BTFSC      STATUS, 2
0x061A	0x2D8E      	GOTO       L_controlMenu121
0x061B	0x083F      	MOVF       _menuIndex, 0
0x061C	0x3A06      	XORLW      6
0x061D	0x1903      	BTFSC      STATUS, 2
0x061E	0x2DAD      	GOTO       L_controlMenu122
0x061F	0x083F      	MOVF       _menuIndex, 0
0x0620	0x3A07      	XORLW      7
0x0621	0x1903      	BTFSC      STATUS, 2
0x0622	0x2DC3      	GOTO       L_controlMenu123
0x0623	0x083F      	MOVF       _menuIndex, 0
0x0624	0x3A08      	XORLW      8
0x0625	0x1903      	BTFSC      STATUS, 2
0x0626	0x2DD8      	GOTO       L_controlMenu124
0x0627	0x083F      	MOVF       _menuIndex, 0
0x0628	0x3A09      	XORLW      9
0x0629	0x1903      	BTFSC      STATUS, 2
0x062A	0x2DED      	GOTO       L_controlMenu125
L_controlMenu114:
;MLK_RGB_Controller.c,415 :: 		}
L_end_controlMenu:
0x062B	0x0008      	RETURN
; end of _controlMenu
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x062C	0x1683      	BSF        STATUS, 5
0x062D	0x1303      	BCF        STATUS, 6
0x062E	0x1186      	BCF        LCD_EN_Direction, BitPos(LCD_EN_Direction+0)
;__Lib_Lcd.c,87 :: 		
0x062F	0x1005      	BCF        LCD_RS_Direction, BitPos(LCD_RS_Direction+0)
;__Lib_Lcd.c,88 :: 		
0x0630	0x1206      	BCF        LCD_D4_Direction, BitPos(LCD_D4_Direction+0)
;__Lib_Lcd.c,89 :: 		
0x0631	0x1286      	BCF        LCD_D5_Direction, BitPos(LCD_D5_Direction+0)
;__Lib_Lcd.c,90 :: 		
0x0632	0x1306      	BCF        LCD_D6_Direction, BitPos(LCD_D6_Direction+0)
;__Lib_Lcd.c,91 :: 		
0x0633	0x1386      	BCF        LCD_D7_Direction, BitPos(LCD_D7_Direction+0)
;__Lib_Lcd.c,93 :: 		
0x0634	0x1283      	BCF        STATUS, 5
0x0635	0x1186      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,94 :: 		
0x0636	0x1005      	BCF        LCD_RS, BitPos(LCD_RS+0)
;__Lib_Lcd.c,95 :: 		
0x0637	0x1386      	BCF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,96 :: 		
0x0638	0x1306      	BCF        LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,97 :: 		
0x0639	0x1286      	BCF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,98 :: 		
0x063A	0x1206      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,100 :: 		
0x063B	0x20D0      	CALL       _Delay_5500us
;__Lib_Lcd.c,101 :: 		
0x063C	0x20D0      	CALL       _Delay_5500us
;__Lib_Lcd.c,102 :: 		
0x063D	0x20D0      	CALL       _Delay_5500us
;__Lib_Lcd.c,105 :: 		
0x063E	0x1686      	BSF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,106 :: 		
0x063F	0x1606      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,107 :: 		
0x0640	0x1586      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,108 :: 		
0x0641	0x20CA      	CALL       _Delay_1us
;__Lib_Lcd.c,109 :: 		
0x0642	0x1186      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,110 :: 		
0x0643	0x20D0      	CALL       _Delay_5500us
;__Lib_Lcd.c,112 :: 		
0x0644	0x1586      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,113 :: 		
0x0645	0x20CA      	CALL       _Delay_1us
;__Lib_Lcd.c,114 :: 		
0x0646	0x1186      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,115 :: 		
0x0647	0x20D0      	CALL       _Delay_5500us
;__Lib_Lcd.c,117 :: 		
0x0648	0x1586      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,118 :: 		
0x0649	0x20CA      	CALL       _Delay_1us
;__Lib_Lcd.c,119 :: 		
0x064A	0x1186      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,120 :: 		
0x064B	0x20D0      	CALL       _Delay_5500us
;__Lib_Lcd.c,123 :: 		
0x064C	0x1206      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,124 :: 		
0x064D	0x1586      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,125 :: 		
0x064E	0x20CA      	CALL       _Delay_1us
;__Lib_Lcd.c,126 :: 		
0x064F	0x1186      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,127 :: 		
0x0650	0x20D0      	CALL       _Delay_5500us
;__Lib_Lcd.c,130 :: 		
0x0651	0x1586      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,131 :: 		
0x0652	0x20CA      	CALL       _Delay_1us
;__Lib_Lcd.c,132 :: 		
0x0653	0x1186      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,134 :: 		
0x0654	0x1286      	BCF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,135 :: 		
0x0655	0x1786      	BSF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,136 :: 		
0x0656	0x1586      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,137 :: 		
0x0657	0x20CA      	CALL       _Delay_1us
;__Lib_Lcd.c,138 :: 		
0x0658	0x1186      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,139 :: 		
0x0659	0x20D0      	CALL       _Delay_5500us
;__Lib_Lcd.c,142 :: 		
0x065A	0x1386      	BCF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,143 :: 		
0x065B	0x1606      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,144 :: 		
0x065C	0x1586      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,145 :: 		
0x065D	0x20CA      	CALL       _Delay_1us
;__Lib_Lcd.c,146 :: 		
0x065E	0x1186      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,148 :: 		
0x065F	0x1206      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,149 :: 		
0x0660	0x1586      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,150 :: 		
0x0661	0x20CA      	CALL       _Delay_1us
;__Lib_Lcd.c,151 :: 		
0x0662	0x1186      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,152 :: 		
0x0663	0x20D0      	CALL       _Delay_5500us
;__Lib_Lcd.c,155 :: 		
0x0664	0x1586      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,156 :: 		
0x0665	0x20CA      	CALL       _Delay_1us
;__Lib_Lcd.c,157 :: 		
0x0666	0x1186      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,159 :: 		
0x0667	0x1606      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,160 :: 		
0x0668	0x1586      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,161 :: 		
0x0669	0x20CA      	CALL       _Delay_1us
;__Lib_Lcd.c,162 :: 		
0x066A	0x1186      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,163 :: 		
0x066B	0x20D0      	CALL       _Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x066C	0x1206      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,167 :: 		
0x066D	0x1586      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,168 :: 		
0x066E	0x20CA      	CALL       _Delay_1us
;__Lib_Lcd.c,169 :: 		
0x066F	0x1186      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,171 :: 		
0x0670	0x1786      	BSF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,172 :: 		
0x0671	0x1706      	BSF        LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,173 :: 		
0x0672	0x1686      	BSF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,174 :: 		
0x0673	0x1606      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,175 :: 		
0x0674	0x1586      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,176 :: 		
0x0675	0x20CA      	CALL       _Delay_1us
;__Lib_Lcd.c,177 :: 		
0x0676	0x1186      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,179 :: 		
0x0677	0x20D0      	CALL       _Delay_5500us
;__Lib_Lcd.c,181 :: 		
0x0678	0x1683      	BSF        STATUS, 5
0x0679	0x15C9      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x067A	0x0008      	RETURN
; end of _Lcd_Init
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x067B	0x22F1      	CALL       _____DoICP
0x067C	0x118A      	BCF        PCLATH, 3
0x067D	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x067E	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x067F	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0680	0x0AD5      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0681	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0682	0x0AD6      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0683	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0684	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0685	0x2E7B      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0686	0x0008      	RETURN
; end of ___CC2DW
_readButton:
;MLK_RGB_Controller.c,164 :: 		void readButton(){
;MLK_RGB_Controller.c,168 :: 		fbt5p=0;
0x0687	0x1683      	BSF        STATUS, 5
0x0688	0x1303      	BCF        STATUS, 6
0x0689	0x1249      	BCF        _fbt5p, BitPos(_fbt5p+0)
;MLK_RGB_Controller.c,169 :: 		fbt5h=0;
0x068A	0x13C9      	BCF        _fbt5h, BitPos(_fbt5h+0)
;MLK_RGB_Controller.c,170 :: 		fbt4p=0;
0x068B	0x12C9      	BCF        _fbt4p, BitPos(_fbt4p+0)
;MLK_RGB_Controller.c,171 :: 		fbt4h=0;
0x068C	0x1149      	BCF        _fbt4h, BitPos(_fbt4h+0)
;MLK_RGB_Controller.c,172 :: 		f2bt=0;
0x068D	0x10C9      	BCF        _f2bt, BitPos(_f2bt+0)
;MLK_RGB_Controller.c,174 :: 		if(Button(&PORTA,4,1,1)){
0x068E	0x3005      	MOVLW      PORTA
0x068F	0x00DC      	MOVWF      FARG_Button_port
0x0690	0x3004      	MOVLW      4
0x0691	0x00DD      	MOVWF      FARG_Button_pin
0x0692	0x3001      	MOVLW      1
0x0693	0x00DE      	MOVWF      FARG_Button_time_ms
0x0694	0x3001      	MOVLW      1
0x0695	0x00DF      	MOVWF      FARG_Button_active_state
0x0696	0x21B6      	CALL       _Button
0x0697	0x0870      	MOVF       R0, 0
0x0698	0x1903      	BTFSC      STATUS, 2
0x0699	0x2EA0      	GOTO       L_readButton26
;MLK_RGB_Controller.c,175 :: 		timer4++;
0x069A	0x0AAA      	INCF       _timer4, 1
;MLK_RGB_Controller.c,176 :: 		if(timer4<20){fbt4=1;}
0x069B	0x3014      	MOVLW      20
0x069C	0x022A      	SUBWF      _timer4, 0
0x069D	0x1803      	BTFSC      STATUS, 0
0x069E	0x2EA0      	GOTO       L_readButton27
0x069F	0x1553      	BSF        readButton_fbt4_L0, BitPos(readButton_fbt4_L0+0)
L_readButton27:
;MLK_RGB_Controller.c,178 :: 		}
L_readButton26:
;MLK_RGB_Controller.c,179 :: 		if(timer4==10){                     //segurado
0x06A0	0x082A      	MOVF       _timer4, 0
0x06A1	0x3A0A      	XORLW      10
0x06A2	0x1D03      	BTFSS      STATUS, 2
0x06A3	0x2EA7      	GOTO       L_readButton28
;MLK_RGB_Controller.c,180 :: 		fbt4=0;
0x06A4	0x1153      	BCF        readButton_fbt4_L0, BitPos(readButton_fbt4_L0+0)
;MLK_RGB_Controller.c,181 :: 		fbt4h=1;
0x06A5	0x1549      	BSF        _fbt4h, BitPos(_fbt4h+0)
;MLK_RGB_Controller.c,182 :: 		fbt4p=0;
0x06A6	0x12C9      	BCF        _fbt4p, BitPos(_fbt4p+0)
;MLK_RGB_Controller.c,183 :: 		}
L_readButton28:
;MLK_RGB_Controller.c,184 :: 		if(Button(&PORTA,4,1,0)&&fbt4==1){ //presionado
0x06A7	0x3005      	MOVLW      PORTA
0x06A8	0x00DC      	MOVWF      FARG_Button_port
0x06A9	0x3004      	MOVLW      4
0x06AA	0x00DD      	MOVWF      FARG_Button_pin
0x06AB	0x3001      	MOVLW      1
0x06AC	0x00DE      	MOVWF      FARG_Button_time_ms
0x06AD	0x01DF      	CLRF       FARG_Button_active_state
0x06AE	0x21B6      	CALL       _Button
0x06AF	0x0870      	MOVF       R0, 0
0x06B0	0x1903      	BTFSC      STATUS, 2
0x06B1	0x2EB6      	GOTO       L_readButton31
0x06B2	0x1D53      	BTFSS      readButton_fbt4_L0, BitPos(readButton_fbt4_L0+0)
0x06B3	0x2EB6      	GOTO       L_readButton31
L__readButton131:
;MLK_RGB_Controller.c,185 :: 		fbt4=0;
0x06B4	0x1153      	BCF        readButton_fbt4_L0, BitPos(readButton_fbt4_L0+0)
;MLK_RGB_Controller.c,186 :: 		fbt4p=1;
0x06B5	0x16C9      	BSF        _fbt4p, BitPos(_fbt4p+0)
;MLK_RGB_Controller.c,187 :: 		}
L_readButton31:
;MLK_RGB_Controller.c,189 :: 		if(Button(&PORTA,4,1,0)){ //solto
0x06B6	0x3005      	MOVLW      PORTA
0x06B7	0x00DC      	MOVWF      FARG_Button_port
0x06B8	0x3004      	MOVLW      4
0x06B9	0x00DD      	MOVWF      FARG_Button_pin
0x06BA	0x3001      	MOVLW      1
0x06BB	0x00DE      	MOVWF      FARG_Button_time_ms
0x06BC	0x01DF      	CLRF       FARG_Button_active_state
0x06BD	0x21B6      	CALL       _Button
0x06BE	0x0870      	MOVF       R0, 0
0x06BF	0x1903      	BTFSC      STATUS, 2
0x06C0	0x2EC2      	GOTO       L_readButton32
;MLK_RGB_Controller.c,190 :: 		timer4=0;
0x06C1	0x01AA      	CLRF       _timer4
;MLK_RGB_Controller.c,191 :: 		}
L_readButton32:
;MLK_RGB_Controller.c,194 :: 		if(Button(&PORTA,5,1,1)){
0x06C2	0x3005      	MOVLW      PORTA
0x06C3	0x00DC      	MOVWF      FARG_Button_port
0x06C4	0x3005      	MOVLW      5
0x06C5	0x00DD      	MOVWF      FARG_Button_pin
0x06C6	0x3001      	MOVLW      1
0x06C7	0x00DE      	MOVWF      FARG_Button_time_ms
0x06C8	0x3001      	MOVLW      1
0x06C9	0x00DF      	MOVWF      FARG_Button_active_state
0x06CA	0x21B6      	CALL       _Button
0x06CB	0x0870      	MOVF       R0, 0
0x06CC	0x1903      	BTFSC      STATUS, 2
0x06CD	0x2ED4      	GOTO       L_readButton33
;MLK_RGB_Controller.c,195 :: 		timer5++;
0x06CE	0x0AA8      	INCF       _timer5, 1
;MLK_RGB_Controller.c,196 :: 		if(timer5<20){fbt5=1;}
0x06CF	0x3014      	MOVLW      20
0x06D0	0x0228      	SUBWF      _timer5, 0
0x06D1	0x1803      	BTFSC      STATUS, 0
0x06D2	0x2ED4      	GOTO       L_readButton34
0x06D3	0x15D3      	BSF        readButton_fbt5_L0, BitPos(readButton_fbt5_L0+0)
L_readButton34:
;MLK_RGB_Controller.c,198 :: 		}
L_readButton33:
;MLK_RGB_Controller.c,199 :: 		if(timer5==10){                     //segurado
0x06D4	0x0828      	MOVF       _timer5, 0
0x06D5	0x3A0A      	XORLW      10
0x06D6	0x1D03      	BTFSS      STATUS, 2
0x06D7	0x2EDB      	GOTO       L_readButton35
;MLK_RGB_Controller.c,200 :: 		fbt5=0;
0x06D8	0x11D3      	BCF        readButton_fbt5_L0, BitPos(readButton_fbt5_L0+0)
;MLK_RGB_Controller.c,201 :: 		fbt5h=1;
0x06D9	0x17C9      	BSF        _fbt5h, BitPos(_fbt5h+0)
;MLK_RGB_Controller.c,202 :: 		fbt5p=0;
0x06DA	0x1249      	BCF        _fbt5p, BitPos(_fbt5p+0)
;MLK_RGB_Controller.c,203 :: 		}
L_readButton35:
;MLK_RGB_Controller.c,204 :: 		if(Button(&PORTA,5,1,0)&&fbt5==1){ //presionado
0x06DB	0x3005      	MOVLW      PORTA
0x06DC	0x00DC      	MOVWF      FARG_Button_port
0x06DD	0x3005      	MOVLW      5
0x06DE	0x00DD      	MOVWF      FARG_Button_pin
0x06DF	0x3001      	MOVLW      1
0x06E0	0x00DE      	MOVWF      FARG_Button_time_ms
0x06E1	0x01DF      	CLRF       FARG_Button_active_state
0x06E2	0x21B6      	CALL       _Button
0x06E3	0x0870      	MOVF       R0, 0
0x06E4	0x1903      	BTFSC      STATUS, 2
0x06E5	0x2EEA      	GOTO       L_readButton38
0x06E6	0x1DD3      	BTFSS      readButton_fbt5_L0, BitPos(readButton_fbt5_L0+0)
0x06E7	0x2EEA      	GOTO       L_readButton38
L__readButton130:
;MLK_RGB_Controller.c,205 :: 		fbt5=0;
0x06E8	0x11D3      	BCF        readButton_fbt5_L0, BitPos(readButton_fbt5_L0+0)
;MLK_RGB_Controller.c,206 :: 		fbt5p=1;
0x06E9	0x1649      	BSF        _fbt5p, BitPos(_fbt5p+0)
;MLK_RGB_Controller.c,207 :: 		}
L_readButton38:
;MLK_RGB_Controller.c,209 :: 		if(Button(&PORTA,5,1,0)){ //solto
0x06EA	0x3005      	MOVLW      PORTA
0x06EB	0x00DC      	MOVWF      FARG_Button_port
0x06EC	0x3005      	MOVLW      5
0x06ED	0x00DD      	MOVWF      FARG_Button_pin
0x06EE	0x3001      	MOVLW      1
0x06EF	0x00DE      	MOVWF      FARG_Button_time_ms
0x06F0	0x01DF      	CLRF       FARG_Button_active_state
0x06F1	0x21B6      	CALL       _Button
0x06F2	0x0870      	MOVF       R0, 0
0x06F3	0x1903      	BTFSC      STATUS, 2
0x06F4	0x2EF6      	GOTO       L_readButton39
;MLK_RGB_Controller.c,210 :: 		timer5=0;
0x06F5	0x01A8      	CLRF       _timer5
;MLK_RGB_Controller.c,211 :: 		}
L_readButton39:
;MLK_RGB_Controller.c,213 :: 		if(Button(&PORTA,5,1,1)&&Button(&PORTA,4,1,1)){faux=1;}
0x06F6	0x3005      	MOVLW      PORTA
0x06F7	0x00DC      	MOVWF      FARG_Button_port
0x06F8	0x3005      	MOVLW      5
0x06F9	0x00DD      	MOVWF      FARG_Button_pin
0x06FA	0x3001      	MOVLW      1
0x06FB	0x00DE      	MOVWF      FARG_Button_time_ms
0x06FC	0x3001      	MOVLW      1
0x06FD	0x00DF      	MOVWF      FARG_Button_active_state
0x06FE	0x21B6      	CALL       _Button
0x06FF	0x0870      	MOVF       R0, 0
0x0700	0x1903      	BTFSC      STATUS, 2
0x0701	0x2F0F      	GOTO       L_readButton42
0x0702	0x3005      	MOVLW      PORTA
0x0703	0x00DC      	MOVWF      FARG_Button_port
0x0704	0x3004      	MOVLW      4
0x0705	0x00DD      	MOVWF      FARG_Button_pin
0x0706	0x3001      	MOVLW      1
0x0707	0x00DE      	MOVWF      FARG_Button_time_ms
0x0708	0x3001      	MOVLW      1
0x0709	0x00DF      	MOVWF      FARG_Button_active_state
0x070A	0x21B6      	CALL       _Button
0x070B	0x0870      	MOVF       R0, 0
0x070C	0x1903      	BTFSC      STATUS, 2
0x070D	0x2F0F      	GOTO       L_readButton42
L__readButton129:
0x070E	0x14D3      	BSF        readButton_faux_L0, BitPos(readButton_faux_L0+0)
L_readButton42:
;MLK_RGB_Controller.c,214 :: 		if(Button(&PORTA,5,1,0)&&Button(&PORTA,4,1,0)&&faux==1){
0x070F	0x3005      	MOVLW      PORTA
0x0710	0x00DC      	MOVWF      FARG_Button_port
0x0711	0x3005      	MOVLW      5
0x0712	0x00DD      	MOVWF      FARG_Button_pin
0x0713	0x3001      	MOVLW      1
0x0714	0x00DE      	MOVWF      FARG_Button_time_ms
0x0715	0x01DF      	CLRF       FARG_Button_active_state
0x0716	0x21B6      	CALL       _Button
0x0717	0x0870      	MOVF       R0, 0
0x0718	0x1903      	BTFSC      STATUS, 2
0x0719	0x2F2D      	GOTO       L_readButton45
0x071A	0x3005      	MOVLW      PORTA
0x071B	0x00DC      	MOVWF      FARG_Button_port
0x071C	0x3004      	MOVLW      4
0x071D	0x00DD      	MOVWF      FARG_Button_pin
0x071E	0x3001      	MOVLW      1
0x071F	0x00DE      	MOVWF      FARG_Button_time_ms
0x0720	0x01DF      	CLRF       FARG_Button_active_state
0x0721	0x21B6      	CALL       _Button
0x0722	0x0870      	MOVF       R0, 0
0x0723	0x1903      	BTFSC      STATUS, 2
0x0724	0x2F2D      	GOTO       L_readButton45
0x0725	0x1CD3      	BTFSS      readButton_faux_L0, BitPos(readButton_faux_L0+0)
0x0726	0x2F2D      	GOTO       L_readButton45
L__readButton128:
;MLK_RGB_Controller.c,215 :: 		faux=0;
0x0727	0x10D3      	BCF        readButton_faux_L0, BitPos(readButton_faux_L0+0)
;MLK_RGB_Controller.c,216 :: 		fbt4p=0;
0x0728	0x12C9      	BCF        _fbt4p, BitPos(_fbt4p+0)
;MLK_RGB_Controller.c,217 :: 		fbt5p=0;
0x0729	0x1249      	BCF        _fbt5p, BitPos(_fbt5p+0)
;MLK_RGB_Controller.c,218 :: 		fbt4h=0;
0x072A	0x1149      	BCF        _fbt4h, BitPos(_fbt4h+0)
;MLK_RGB_Controller.c,219 :: 		fbt4h=0;
0x072B	0x1149      	BCF        _fbt4h, BitPos(_fbt4h+0)
;MLK_RGB_Controller.c,220 :: 		f2bt=1;
0x072C	0x14C9      	BSF        _f2bt, BitPos(_f2bt+0)
;MLK_RGB_Controller.c,221 :: 		}
L_readButton45:
;MLK_RGB_Controller.c,222 :: 		}
L_end_readButton:
0x072D	0x0008      	RETURN
; end of _readButton
_main:
0x072E	0x27E4      	CALL       2020
;MLK_RGB_Controller.c,417 :: 		void main() {
;MLK_RGB_Controller.c,418 :: 		trisa=0b00110000; //pinos A4 e A5 como entradas digitais e o restante como saidas
0x072F	0x3030      	MOVLW      48
0x0730	0x1683      	BSF        STATUS, 5
0x0731	0x1303      	BCF        STATUS, 6
0x0732	0x0085      	MOVWF      TRISA
;MLK_RGB_Controller.c,419 :: 		trisb=0;
0x0733	0x0186      	CLRF       TRISB
;MLK_RGB_Controller.c,420 :: 		portb=0;
0x0734	0x1283      	BCF        STATUS, 5
0x0735	0x0186      	CLRF       PORTB
;MLK_RGB_Controller.c,421 :: 		INTCON=0b01000000;
0x0736	0x3040      	MOVLW      64
0x0737	0x008B      	MOVWF      INTCON
;MLK_RGB_Controller.c,422 :: 		OPTION_REG = 0x82;
0x0738	0x3082      	MOVLW      130
0x0739	0x1683      	BSF        STATUS, 5
0x073A	0x0081      	MOVWF      OPTION_REG
;MLK_RGB_Controller.c,423 :: 		pwm_ini=pwm_reg;
0x073B	0x307D      	MOVLW      125
0x073C	0x00CF      	MOVWF      _pwm_ini
0x073D	0x30FF      	MOVLW      255
0x073E	0x00D0      	MOVWF      _pwm_ini+1
;MLK_RGB_Controller.c,424 :: 		TMR1L=Lo(pwm_ini);
0x073F	0x307D      	MOVLW      125
0x0740	0x1283      	BCF        STATUS, 5
0x0741	0x008E      	MOVWF      TMR1L
;MLK_RGB_Controller.c,425 :: 		TMR1H=Hi(pwm_ini);
0x0742	0x1683      	BSF        STATUS, 5
0x0743	0x0850      	MOVF       _pwm_ini+1, 0
0x0744	0x00F0      	MOVWF      R0
0x0745	0x01F1      	CLRF       R0+1
0x0746	0x30FF      	MOVLW      255
0x0747	0x0570      	ANDWF      R0, 0
0x0748	0x1283      	BCF        STATUS, 5
0x0749	0x008F      	MOVWF      TMR1H
;MLK_RGB_Controller.c,428 :: 		T1CKPS1_bit=0;
0x074A	0x1290      	BCF        T1CKPS1_bit, BitPos(T1CKPS1_bit+0)
;MLK_RGB_Controller.c,429 :: 		T1CKPS0_bit=0;
0x074B	0x1210      	BCF        T1CKPS0_bit, BitPos(T1CKPS0_bit+0)
;MLK_RGB_Controller.c,431 :: 		TMR1IF_bit=0;
0x074C	0x100C      	BCF        TMR1IF_bit, BitPos(TMR1IF_bit+0)
;MLK_RGB_Controller.c,432 :: 		TMR1IE_bit=1;
0x074D	0x1683      	BSF        STATUS, 5
0x074E	0x140C      	BSF        TMR1IE_bit, BitPos(TMR1IE_bit+0)
;MLK_RGB_Controller.c,433 :: 		TMR1ON_bit=1;
0x074F	0x1283      	BCF        STATUS, 5
0x0750	0x1410      	BSF        TMR1ON_bit, BitPos(TMR1ON_bit+0)
;MLK_RGB_Controller.c,434 :: 		GIE_bit=1;
0x0751	0x178B      	BSF        GIE_bit, BitPos(GIE_bit+0)
;MLK_RGB_Controller.c,435 :: 		PEIE_bit = 0x01;           // Habilitar a interrupção por periféricos
0x0752	0x170B      	BSF        PEIE_bit, BitPos(PEIE_bit+0)
;MLK_RGB_Controller.c,436 :: 		T0IE_bit = 0x01;           // Habilitar a interrupção estouro TMR0
0x0753	0x168B      	BSF        T0IE_bit, BitPos(T0IE_bit+0)
;MLK_RGB_Controller.c,437 :: 		TMR0 = 0x06;
0x0754	0x3006      	MOVLW      6
0x0755	0x0081      	MOVWF      TMR0
;MLK_RGB_Controller.c,440 :: 		pwm1=1;
0x0756	0x1406      	BSF        PORTB, 0
;MLK_RGB_Controller.c,441 :: 		pwm2=1;
0x0757	0x1486      	BSF        PORTB, 1
;MLK_RGB_Controller.c,442 :: 		pwm3=1;
0x0758	0x1506      	BSF        PORTB, 2
;MLK_RGB_Controller.c,444 :: 		ciclo1=0; //Red
0x0759	0x1683      	BSF        STATUS, 5
0x075A	0x01D1      	CLRF       _ciclo1
;MLK_RGB_Controller.c,445 :: 		ciclo2=0; //Green
0x075B	0x01CA      	CLRF       _ciclo2
;MLK_RGB_Controller.c,446 :: 		ciclo3=0; //Blue
0x075C	0x01CB      	CLRF       _ciclo3
;MLK_RGB_Controller.c,448 :: 		Lcd_Init();
0x075D	0x262C      	CALL       _Lcd_Init
;MLK_RGB_Controller.c,449 :: 		lcd_cmd(_LCD_CURSOR_OFF) ;
0x075E	0x300C      	MOVLW      12
0x075F	0x00EA      	MOVWF      FARG_Lcd_Cmd_out_char
0x0760	0x20E4      	CALL       _Lcd_Cmd
;MLK_RGB_Controller.c,451 :: 		while(1){
L_main126:
;MLK_RGB_Controller.c,452 :: 		readButton();
0x0761	0x2687      	CALL       _readButton
;MLK_RGB_Controller.c,453 :: 		controlMenu();
0x0762	0x252C      	CALL       _controlMenu
;MLK_RGB_Controller.c,454 :: 		functionButton();
0x0763	0x24B1      	CALL       _functionButton
;MLK_RGB_Controller.c,455 :: 		ajustaBrilho();
0x0764	0x24FE      	CALL       _ajustaBrilho
;MLK_RGB_Controller.c,456 :: 		contadoraux++;
0x0765	0x1283      	BCF        STATUS, 5
0x0766	0x0AE5      	INCF       _contadoraux, 1
;MLK_RGB_Controller.c,457 :: 		}
0x0767	0x2F61      	GOTO       L_main126
;MLK_RGB_Controller.c,458 :: 		}
L_end_main:
0x0768	0x2F68      	GOTO       $+0
; end of _main
0x07E4	0x3023      	MOVLW      35
0x07E5	0x0084      	MOVWF      FSR
0x07E6	0x304D      	MOVLW      77
0x07E7	0x1283      	BCF        STATUS, 5
0x07E8	0x1303      	BCF        STATUS, 6
0x07E9	0x00F0      	MOVWF      R0
0x07EA	0x306E      	MOVLW      110
0x07EB	0x1683      	BSF        STATUS, 5
0x07EC	0x00D5      	MOVWF      ___DoICPAddr
0x07ED	0x3007      	MOVLW      7
0x07EE	0x00D6      	MOVWF      214
0x07EF	0x267B      	CALL       1659
0x07F0	0x30A0      	MOVLW      160
0x07F1	0x0084      	MOVWF      FSR
0x07F2	0x3029      	MOVLW      41
0x07F3	0x1283      	BCF        STATUS, 5
0x07F4	0x1303      	BCF        STATUS, 6
0x07F5	0x00F0      	MOVWF      R0
0x07F6	0x30BB      	MOVLW      187
0x07F7	0x1683      	BSF        STATUS, 5
0x07F8	0x00D5      	MOVWF      ___DoICPAddr
0x07F9	0x3007      	MOVLW      7
0x07FA	0x00D6      	MOVWF      214
0x07FB	0x267B      	CALL       1659
0x07FC	0x0008      	RETURN
;MLK_RGB_Controller.c,0 :: ?ICS?lstr8_MLK_RGB_Controller
0x076E	0x3442 ;?ICS?lstr8_MLK_RGB_Controller+0
0x076F	0x3472 ;?ICS?lstr8_MLK_RGB_Controller+1
0x0770	0x3469 ;?ICS?lstr8_MLK_RGB_Controller+2
0x0771	0x346C ;?ICS?lstr8_MLK_RGB_Controller+3
0x0772	0x3468 ;?ICS?lstr8_MLK_RGB_Controller+4
0x0773	0x346F ;?ICS?lstr8_MLK_RGB_Controller+5
0x0774	0x343A ;?ICS?lstr8_MLK_RGB_Controller+6
0x0775	0x3400 ;?ICS?lstr8_MLK_RGB_Controller+7
; end of ?ICS?lstr8_MLK_RGB_Controller
;MLK_RGB_Controller.c,0 :: ?ICS_brilhopasso
0x0776	0x3405 ;?ICS_brilhopasso+0
; end of ?ICS_brilhopasso
;MLK_RGB_Controller.c,0 :: ?ICS?lstr7_MLK_RGB_Controller
0x0777	0x3446 ;?ICS?lstr7_MLK_RGB_Controller+0
0x0778	0x3400 ;?ICS?lstr7_MLK_RGB_Controller+1
; end of ?ICS?lstr7_MLK_RGB_Controller
;MLK_RGB_Controller.c,0 :: ?ICS_contadoraux2
0x0779	0x3400 ;?ICS_contadoraux2+0
; end of ?ICS_contadoraux2
;MLK_RGB_Controller.c,0 :: ?ICS?lstr9_MLK_RGB_Controller
0x077A	0x3452 ;?ICS?lstr9_MLK_RGB_Controller+0
0x077B	0x3465 ;?ICS?lstr9_MLK_RGB_Controller+1
0x077C	0x3464 ;?ICS?lstr9_MLK_RGB_Controller+2
0x077D	0x343A ;?ICS?lstr9_MLK_RGB_Controller+3
0x077E	0x3400 ;?ICS?lstr9_MLK_RGB_Controller+4
; end of ?ICS?lstr9_MLK_RGB_Controller
;MLK_RGB_Controller.c,0 :: ?ICS_passoSpeed
0x077F	0x3405 ;?ICS_passoSpeed+0
; end of ?ICS_passoSpeed
;MLK_RGB_Controller.c,0 :: ?ICS?lstr12_MLK_RGB_Controller
0x0780	0x3453 ;?ICS?lstr12_MLK_RGB_Controller+0
0x0781	0x3470 ;?ICS?lstr12_MLK_RGB_Controller+1
0x0782	0x3465 ;?ICS?lstr12_MLK_RGB_Controller+2
0x0783	0x3465 ;?ICS?lstr12_MLK_RGB_Controller+3
0x0784	0x3464 ;?ICS?lstr12_MLK_RGB_Controller+4
0x0785	0x343A ;?ICS?lstr12_MLK_RGB_Controller+5
0x0786	0x3400 ;?ICS?lstr12_MLK_RGB_Controller+6
; end of ?ICS?lstr12_MLK_RGB_Controller
;MLK_RGB_Controller.c,0 :: ?ICS?lstr10_MLK_RGB_Controller
0x0787	0x3447 ;?ICS?lstr10_MLK_RGB_Controller+0
0x0788	0x3472 ;?ICS?lstr10_MLK_RGB_Controller+1
0x0789	0x3465 ;?ICS?lstr10_MLK_RGB_Controller+2
0x078A	0x3465 ;?ICS?lstr10_MLK_RGB_Controller+3
0x078B	0x346E ;?ICS?lstr10_MLK_RGB_Controller+4
0x078C	0x343A ;?ICS?lstr10_MLK_RGB_Controller+5
0x078D	0x3400 ;?ICS?lstr10_MLK_RGB_Controller+6
; end of ?ICS?lstr10_MLK_RGB_Controller
;MLK_RGB_Controller.c,0 :: ?ICS?lstr11_MLK_RGB_Controller
0x078E	0x3442 ;?ICS?lstr11_MLK_RGB_Controller+0
0x078F	0x346C ;?ICS?lstr11_MLK_RGB_Controller+1
0x0790	0x3475 ;?ICS?lstr11_MLK_RGB_Controller+2
0x0791	0x3465 ;?ICS?lstr11_MLK_RGB_Controller+3
0x0792	0x343A ;?ICS?lstr11_MLK_RGB_Controller+4
0x0793	0x3400 ;?ICS?lstr11_MLK_RGB_Controller+5
; end of ?ICS?lstr11_MLK_RGB_Controller
;MLK_RGB_Controller.c,0 :: ?ICS_brilhoaux
0x0794	0x3464 ;?ICS_brilhoaux+0
; end of ?ICS_brilhoaux
;MLK_RGB_Controller.c,0 :: ?ICS?lstr4_MLK_RGB_Controller
0x0795	0x3443 ;?ICS?lstr4_MLK_RGB_Controller+0
0x0796	0x346F ;?ICS?lstr4_MLK_RGB_Controller+1
0x0797	0x3472 ;?ICS?lstr4_MLK_RGB_Controller+2
0x0798	0x3420 ;?ICS?lstr4_MLK_RGB_Controller+3
0x0799	0x3466 ;?ICS?lstr4_MLK_RGB_Controller+4
0x079A	0x3469 ;?ICS?lstr4_MLK_RGB_Controller+5
0x079B	0x3478 ;?ICS?lstr4_MLK_RGB_Controller+6
0x079C	0x3461 ;?ICS?lstr4_MLK_RGB_Controller+7
0x079D	0x3400 ;?ICS?lstr4_MLK_RGB_Controller+8
; end of ?ICS?lstr4_MLK_RGB_Controller
;MLK_RGB_Controller.c,0 :: ?ICS_brilho
0x079E	0x3464 ;?ICS_brilho+0
; end of ?ICS_brilho
;MLK_RGB_Controller.c,0 :: ?ICS?lstr5_MLK_RGB_Controller
0x079F	0x3443 ;?ICS?lstr5_MLK_RGB_Controller+0
0x07A0	0x3469 ;?ICS?lstr5_MLK_RGB_Controller+1
0x07A1	0x3463 ;?ICS?lstr5_MLK_RGB_Controller+2
0x07A2	0x346C ;?ICS?lstr5_MLK_RGB_Controller+3
0x07A3	0x346F ;?ICS?lstr5_MLK_RGB_Controller+4
0x07A4	0x3420 ;?ICS?lstr5_MLK_RGB_Controller+5
0x07A5	0x3465 ;?ICS?lstr5_MLK_RGB_Controller+6
0x07A6	0x3473 ;?ICS?lstr5_MLK_RGB_Controller+7
0x07A7	0x3470 ;?ICS?lstr5_MLK_RGB_Controller+8
0x07A8	0x3465 ;?ICS?lstr5_MLK_RGB_Controller+9
0x07A9	0x3463 ;?ICS?lstr5_MLK_RGB_Controller+10
0x07AA	0x3474 ;?ICS?lstr5_MLK_RGB_Controller+11
0x07AB	0x3472 ;?ICS?lstr5_MLK_RGB_Controller+12
0x07AC	0x3461 ;?ICS?lstr5_MLK_RGB_Controller+13
0x07AD	0x346C ;?ICS?lstr5_MLK_RGB_Controller+14
0x07AE	0x3421 ;?ICS?lstr5_MLK_RGB_Controller+15
0x07AF	0x3400 ;?ICS?lstr5_MLK_RGB_Controller+16
; end of ?ICS?lstr5_MLK_RGB_Controller
;MLK_RGB_Controller.c,0 :: ?ICS_contadoraux
0x07B0	0x3400 ;?ICS_contadoraux+0
; end of ?ICS_contadoraux
;MLK_RGB_Controller.c,0 :: ?ICS_pwm1_cont
0x07B1	0x3400 ;?ICS_pwm1_cont+0
; end of ?ICS_pwm1_cont
;MLK_RGB_Controller.c,0 :: ?ICS?lstr6_MLK_RGB_Controller
0x07B2	0x3450 ;?ICS?lstr6_MLK_RGB_Controller+0
0x07B3	0x3475 ;?ICS?lstr6_MLK_RGB_Controller+1
0x07B4	0x346C ;?ICS?lstr6_MLK_RGB_Controller+2
0x07B5	0x3473 ;?ICS?lstr6_MLK_RGB_Controller+3
0x07B6	0x3461 ;?ICS?lstr6_MLK_RGB_Controller+4
0x07B7	0x346E ;?ICS?lstr6_MLK_RGB_Controller+5
0x07B8	0x3474 ;?ICS?lstr6_MLK_RGB_Controller+6
0x07B9	0x3465 ;?ICS?lstr6_MLK_RGB_Controller+7
0x07BA	0x3400 ;?ICS?lstr6_MLK_RGB_Controller+8
; end of ?ICS?lstr6_MLK_RGB_Controller
;MLK_RGB_Controller.c,0 :: ?ICS_speed
0x07BB	0x3405 ;?ICS_speed+0
; end of ?ICS_speed
;MLK_RGB_Controller.c,0 :: ?ICS_pwm2_cont
0x07BC	0x3400 ;?ICS_pwm2_cont+0
; end of ?ICS_pwm2_cont
;MLK_RGB_Controller.c,0 :: ?ICS_pwm3_cont
0x07BD	0x3400 ;?ICS_pwm3_cont+0
; end of ?ICS_pwm3_cont
;MLK_RGB_Controller.c,0 :: ?ICS_counter
0x07BE	0x3400 ;?ICS_counter+0
0x07BF	0x3400 ;?ICS_counter+1
; end of ?ICS_counter
;MLK_RGB_Controller.c,0 :: ?ICS_pwm1_caso
0x07C0	0x3400 ;?ICS_pwm1_caso+0
; end of ?ICS_pwm1_caso
;MLK_RGB_Controller.c,0 :: ?ICS_pwm3_caso
0x07C1	0x3404 ;?ICS_pwm3_caso+0
; end of ?ICS_pwm3_caso
;MLK_RGB_Controller.c,0 :: ?ICS_pwm2_caso
0x07C2	0x3402 ;?ICS_pwm2_caso+0
; end of ?ICS_pwm2_caso
;MLK_RGB_Controller.c,0 :: ?ICS_timer5
0x07C3	0x3400 ;?ICS_timer5+0
; end of ?ICS_timer5
;MLK_RGB_Controller.c,0 :: ?ICS_ciclo
0x07C4	0x3400 ;?ICS_ciclo+0
; end of ?ICS_ciclo
;MLK_RGB_Controller.c,0 :: ?ICS_timer4
0x07C5	0x3400 ;?ICS_timer4+0
; end of ?ICS_timer4
;MLK_RGB_Controller.c,0 :: ?ICS?lstr1_MLK_RGB_Controller
0x07C6	0x3420 ;?ICS?lstr1_MLK_RGB_Controller+0
0x07C7	0x3400 ;?ICS?lstr1_MLK_RGB_Controller+1
; end of ?ICS?lstr1_MLK_RGB_Controller
;MLK_RGB_Controller.c,0 :: ?ICS_red
0x07C8	0x3400 ;?ICS_red+0
; end of ?ICS_red
;MLK_RGB_Controller.c,0 :: ?ICS?lstr3_MLK_RGB_Controller
0x07C9	0x3444 ;?ICS?lstr3_MLK_RGB_Controller+0
0x07CA	0x3465 ;?ICS?lstr3_MLK_RGB_Controller+1
0x07CB	0x3473 ;?ICS?lstr3_MLK_RGB_Controller+2
0x07CC	0x346C ;?ICS?lstr3_MLK_RGB_Controller+3
0x07CD	0x3469 ;?ICS?lstr3_MLK_RGB_Controller+4
0x07CE	0x3467 ;?ICS?lstr3_MLK_RGB_Controller+5
0x07CF	0x3461 ;?ICS?lstr3_MLK_RGB_Controller+6
0x07D0	0x3464 ;?ICS?lstr3_MLK_RGB_Controller+7
0x07D1	0x346F ;?ICS?lstr3_MLK_RGB_Controller+8
0x07D2	0x3421 ;?ICS?lstr3_MLK_RGB_Controller+9
0x07D3	0x3400 ;?ICS?lstr3_MLK_RGB_Controller+10
; end of ?ICS?lstr3_MLK_RGB_Controller
;MLK_RGB_Controller.c,0 :: ?ICS_green
0x07D4	0x3400 ;?ICS_green+0
; end of ?ICS_green
;MLK_RGB_Controller.c,0 :: ?ICS?lstr2_MLK_RGB_Controller
0x07D5	0x3452 ;?ICS?lstr2_MLK_RGB_Controller+0
0x07D6	0x3447 ;?ICS?lstr2_MLK_RGB_Controller+1
0x07D7	0x3442 ;?ICS?lstr2_MLK_RGB_Controller+2
0x07D8	0x343A ;?ICS?lstr2_MLK_RGB_Controller+3
0x07D9	0x3400 ;?ICS?lstr2_MLK_RGB_Controller+4
; end of ?ICS?lstr2_MLK_RGB_Controller
;MLK_RGB_Controller.c,0 :: ?ICS_menuIndex
0x07DA	0x3400 ;?ICS_menuIndex+0
; end of ?ICS_menuIndex
;MLK_RGB_Controller.c,0 :: ?ICS_menuindexant
0x07DB	0x3400 ;?ICS_menuindexant+0
; end of ?ICS_menuindexant
;MLK_RGB_Controller.c,0 :: ?ICS_blue
0x07DC	0x3400 ;?ICS_blue+0
; end of ?ICS_blue
;MLK_RGB_Controller.c,0 :: ?ICS_auxSTR
0x07DD	0x3420 ;?ICS_auxSTR+0
0x07DE	0x3420 ;?ICS_auxSTR+1
0x07DF	0x3420 ;?ICS_auxSTR+2
0x07E0	0x3420 ;?ICS_auxSTR+3
0x07E1	0x3420 ;?ICS_auxSTR+4
0x07E2	0x3420 ;?ICS_auxSTR+5
0x07E3	0x3400 ;?ICS_auxSTR+6
; end of ?ICS_auxSTR
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004     [198]    _Interrpcion
0x00CA       [6]    _Delay_1us
0x00D0      [13]    _Delay_5500us
0x00DD       [7]    _Delay_50us
0x00E4      [94]    _Lcd_Cmd
0x0142      [29]    _Div_16X16_U
0x015F      [12]    _Delay_500us
0x016B      [66]    _WordToStr
0x01AD       [9]    _Lcd_Chr_CP
0x01B6      [58]    _Button
0x01F0     [106]    _IntToStr
0x025A      [65]    _Lcd_Out
0x029B      [44]    _Div_16x16_S_L
0x02C7      [25]    _Mul_8X8_U
0x02E0      [17]    _Div_8X8_U
0x02F1       [7]    _____DoICP
0x02F8     [105]    _Div_16x16_S
0x0361      [80]    _fadeEffect
0x03B1     [108]    _atualizaAux
0x041D      [99]    _cicloEffect
0x0480      [49]    _printRGB
0x04B1      [77]    _functionButton
0x04FE      [46]    _ajustaBrilho
0x052C     [256]    _controlMenu
0x062C      [79]    _Lcd_Init
0x067B      [12]    ___CC2DW
0x0687     [167]    _readButton
0x072E      [58]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0005       [0]    RA0_bit
0x0005       [0]    LCD_RS
0x0006       [0]    RB4_bit
0x0006       [0]    RB7_bit
0x0006       [0]    LCD_D7
0x0006       [0]    RB6_bit
0x0006       [0]    RB5_bit
0x0006       [0]    LCD_D6
0x0006       [0]    LCD_D4
0x0006       [1]    PORTB
0x0006       [0]    LCD_EN
0x0006       [0]    pwm2
0x0006       [0]    pwm3
0x0006       [0]    pwm1
0x0006       [0]    RB3_bit
0x0006       [0]    LCD_D5
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x000B       [0]    T0IE_bit
0x000B       [0]    PEIE_bit
0x000B       [0]    T0IF_bit
0x000B       [0]    GIE_bit
0x000C       [0]    TMR1IF_bit
0x000E       [1]    TMR1L
0x000F       [1]    TMR1H
0x0010       [0]    T1CKPS1_bit
0x0010       [0]    TMR1ON_bit
0x0010       [0]    T1CKPS0_bit
0x0023       [8]    ?lstr8_MLK_RGB_Controller
0x002B       [1]    _brilhopasso
0x002C       [2]    ?lstr7_MLK_RGB_Controller
0x002E       [1]    _contadoraux2
0x002F       [5]    ?lstr9_MLK_RGB_Controller
0x0034       [1]    _passoSpeed
0x0035       [7]    ?lstr12_MLK_RGB_Controller
0x003C       [7]    ?lstr10_MLK_RGB_Controller
0x0043       [6]    ?lstr11_MLK_RGB_Controller
0x0049       [1]    _brilhoaux
0x004A       [9]    ?lstr4_MLK_RGB_Controller
0x0053       [1]    _brilho
0x0054      [17]    ?lstr5_MLK_RGB_Controller
0x0065       [1]    _contadoraux
0x0066       [1]    _pwm1_cont
0x0067       [9]    ?lstr6_MLK_RGB_Controller
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0085       [0]    TRISA0_bit
0x0085       [1]    TRISA
0x0085       [0]    LCD_RS_Direction
0x0086       [1]    TRISB
0x0086       [0]    LCD_D6_Direction
0x0086       [0]    TRISB3_bit
0x0086       [0]    TRISB5_bit
0x0086       [0]    LCD_D7_Direction
0x0086       [0]    TRISB7_bit
0x0086       [0]    LCD_D4_Direction
0x0086       [0]    LCD_EN_Direction
0x0086       [0]    LCD_D5_Direction
0x0086       [0]    TRISB4_bit
0x0086       [0]    TRISB6_bit
0x008C       [0]    TMR1IE_bit
0x00A0       [1]    _speed
0x00A1       [1]    _pwm2_cont
0x00A2       [1]    _pwm3_cont
0x00A3       [2]    _counter
0x00A5       [1]    _pwm1_caso
0x00A6       [1]    _pwm3_caso
0x00A7       [1]    _pwm2_caso
0x00A8       [1]    _timer5
0x00A9       [1]    _ciclo
0x00AA       [1]    _timer4
0x00AB       [2]    ?lstr1_MLK_RGB_Controller
0x00AD       [1]    _red
0x00AE      [11]    ?lstr3_MLK_RGB_Controller
0x00B9       [1]    _green
0x00BA       [5]    ?lstr2_MLK_RGB_Controller
0x00BF       [1]    _menuIndex
0x00C0       [1]    _menuindexant
0x00C1       [1]    _blue
0x00C2       [7]    _auxSTR
0x00C9       [0]    _fbt4h
0x00C9       [0]    _fbt4p
0x00C9       [0]    __Lib_Lcd_cmd_status
0x00C9       [0]    _fbt5p
0x00C9       [0]    _fcor
0x00C9       [0]    _f2bt
0x00C9       [0]    _fbt5h
0x00C9       [0]    _contador
0x00CA       [1]    _ciclo2
0x00CB       [1]    _ciclo3
0x00CC       [1]    _ciclo3_
0x00CD       [1]    _ciclo2_
0x00CE       [1]    _ciclo1_
0x00CF       [2]    _pwm_ini
0x00D1       [1]    _ciclo1
0x00D2       [1]    ___savePCLATH
0x00D3       [0]    readButton_fbt4_L0
0x00D3       [0]    readButton_fbt5_L0
0x00D3       [0]    _menuPrinc
0x00D3       [0]    readButton_faux_L0
0x00D4       [1]    ___saveSTATUS
0x00D5       [2]    ___DoICPAddr
0x00D7       [1]    FARG_fadeEffect_red1
0x00D7       [2]    FARG_atualizaAux_index
0x00D7       [1]    FARG_cicloEffect_speedint
0x00D8       [1]    FARG_cicloEffect_max
0x00D8       [1]    FARG_fadeEffect_green1
0x00D9       [1]    FARG_atualizaAux_aux
0x00D9       [1]    FARG_fadeEffect_blue1
0x00DA       [1]    FARG_atualizaAux_max
0x00DB       [1]    FARG_atualizaAux_min
0x00DC       [2]    FARG_IntToStr_input
0x00DC       [1]    FARG_Button_port
0x00DC       [1]    FARG_Lcd_Out_row
0x00DD       [1]    FARG_Lcd_Out_column
0x00DD       [1]    FARG_Button_pin
0x00DE       [1]    FARG_Button_time_ms
0x00DE       [1]    FARG_IntToStr_output
0x00DE       [1]    FARG_Lcd_Out_text
0x00DF       [2]    IntToStr_i_L0
0x00DF       [1]    FARG_Button_active_state
0x00DF       [1]    Lcd_Out_i_L0
0x00E0       [1]    Button_pMask_L0
0x00E1       [1]    Button_rslt_L0
0x00E1       [2]    IntToStr_negative_L0
0x00E3       [2]    IntToStr_inword_L0
0x00E5       [1]    FARG_Lcd_Chr_CP_out_char
0x00E5       [2]    FARG_WordToStr_input
0x00E7       [1]    FARG_WordToStr_output
0x00E8       [1]    WordToStr_len_L0
0x00E9       [1]    FLOC__WordToStr
0x00EA       [1]    FARG_Lcd_Cmd_out_char
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x076E       [8]    ?ICS?lstr8_MLK_RGB_Controller
0x0776       [1]    ?ICS_brilhopasso
0x0777       [2]    ?ICS?lstr7_MLK_RGB_Controller
0x0779       [1]    ?ICS_contadoraux2
0x077A       [5]    ?ICS?lstr9_MLK_RGB_Controller
0x077F       [1]    ?ICS_passoSpeed
0x0780       [7]    ?ICS?lstr12_MLK_RGB_Controller
0x0787       [7]    ?ICS?lstr10_MLK_RGB_Controller
0x078E       [6]    ?ICS?lstr11_MLK_RGB_Controller
0x0794       [1]    ?ICS_brilhoaux
0x0795       [9]    ?ICS?lstr4_MLK_RGB_Controller
0x079E       [1]    ?ICS_brilho
0x079F      [17]    ?ICS?lstr5_MLK_RGB_Controller
0x07B0       [1]    ?ICS_contadoraux
0x07B1       [1]    ?ICS_pwm1_cont
0x07B2       [9]    ?ICS?lstr6_MLK_RGB_Controller
0x07BB       [1]    ?ICS_speed
0x07BC       [1]    ?ICS_pwm2_cont
0x07BD       [1]    ?ICS_pwm3_cont
0x07BE       [2]    ?ICS_counter
0x07C0       [1]    ?ICS_pwm1_caso
0x07C1       [1]    ?ICS_pwm3_caso
0x07C2       [1]    ?ICS_pwm2_caso
0x07C3       [1]    ?ICS_timer5
0x07C4       [1]    ?ICS_ciclo
0x07C5       [1]    ?ICS_timer4
0x07C6       [2]    ?ICS?lstr1_MLK_RGB_Controller
0x07C8       [1]    ?ICS_red
0x07C9      [11]    ?ICS?lstr3_MLK_RGB_Controller
0x07D4       [1]    ?ICS_green
0x07D5       [5]    ?ICS?lstr2_MLK_RGB_Controller
0x07DA       [1]    ?ICS_menuIndex
0x07DB       [1]    ?ICS_menuindexant
0x07DC       [1]    ?ICS_blue
0x07DD       [7]    ?ICS_auxSTR
